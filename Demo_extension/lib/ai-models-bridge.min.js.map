{"version":3,"file":"ai-models-bridge.min.js","sources":["../src/models/types.ts","../node_modules/webextension-polyfill/dist/browser-polyfill.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/models/abstract-model.ts","../node_modules/destr/dist/index.mjs","../node_modules/ufo/dist/index.mjs","../node_modules/ofetch/dist/shared/ofetch.03887fc3.mjs","../node_modules/ofetch/dist/index.mjs","../src/models/bard.ts","../node_modules/ws/lib/constants.js","../node_modules/ws/lib/buffer-util.js","../node_modules/ws/lib/limiter.js","../node_modules/ws/lib/permessage-deflate.js","../node_modules/ws/lib/validation.js","../node_modules/ws/lib/receiver.js","../node_modules/ws/lib/sender.js","../node_modules/ws/lib/event-target.js","../node_modules/ws/lib/extension.js","../node_modules/ws/lib/websocket.js","../node_modules/ws/lib/stream.js","../node_modules/ws/lib/subprotocol.js","../node_modules/ws/lib/websocket-server.js","../node_modules/ws/index.js","../src/models/bing.ts","../src/utils/permissions.ts","../src/utils/file.ts","../src/utils/sse.ts","../src/utils/stream-async-iterable.ts"],"sourcesContent":["/**\r\n * Interface for all AI models\r\n */\r\nexport interface AIModel {\r\n  /**\r\n   * Get the name of the AI model\r\n   */\r\n  getName(): string;\r\n  \r\n  /**\r\n   * Check if the model supports image input\r\n   */\r\n  supportsImageInput(): boolean;\r\n  \r\n  /**\r\n   * Send a message to the AI model and get a response\r\n   * @param prompt The message to send\r\n   * @param options Additional options for the request\r\n   */\r\n  sendMessage(prompt: string, options?: SendMessageOptions): Promise<string>;\r\n  \r\n  /**\r\n   * Reset the conversation history\r\n   */\r\n  initNewThread(): void;\r\n\r\n  /**\r\n   * Get the current conversation thread\r\n   */\r\n  getCurrentThread(): ChatThread | undefined;\r\n\r\n  /**\r\n   * Load a specific conversation thread\r\n   */\r\n  loadThread(threadId: string): Promise<void>;\r\n\r\n  /**\r\n   * Save the current conversation thread\r\n   */\r\n  saveThread(title?: string): Promise<void>;\r\n\r\n  /**\r\n   * Get all saved conversation threads\r\n   */\r\n  getAllThreads(): Promise<ChatThread[]>;\r\n\r\n  /**\r\n   * Delete a conversation thread\r\n   */\r\n  deleteThread(threadId: string): Promise<void>;\r\n}\r\n\r\n/**\r\n * Options for sending a message\r\n */\r\nexport interface SendMessageOptions {\r\n  /**\r\n   * Image to include with the message (if supported)\r\n   */\r\n  image?: File;\r\n  \r\n  /**\r\n   * Signal to abort the request\r\n   */\r\n  signal?: AbortSignal;\r\n  \r\n  /**\r\n   * Callback for streaming responses\r\n   * @param text The current text of the response\r\n   */\r\n  onProgress?: (text: string) => void;\r\n}\r\n\r\n/**\r\n * Error codes for AI model errors\r\n */\r\nexport enum ErrorCode {\r\n  UNKNOWN_ERROR = 'unknown_error',\r\n  NETWORK_ERROR = 'network_error',\r\n  UNAUTHORIZED = 'unauthorized',\r\n  SERVICE_UNAVAILABLE = 'service_unavailable',\r\n  MISSING_API_KEY = 'missing_api_key',\r\n  MISSING_HOST_PERMISSION = 'missing_host_permission',\r\n  CONVERSATION_LIMIT = 'conversation_limit',\r\n  CONTENT_FILTERED = 'content_filtered',\r\n  INVALID_REQUEST = 'invalid_request',\r\n}\r\n\r\n/**\r\n * Error class for AI model errors\r\n */\r\nexport class AIModelError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public code: ErrorCode = ErrorCode.UNKNOWN_ERROR\r\n  ) {\r\n    super(message);\r\n    this.name = 'AIModelError';\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a message in a conversation\r\n */\r\nexport interface ChatMessage {\r\n  id: string;\r\n  role: 'user' | 'assistant' | 'system';\r\n  content: string;\r\n  timestamp: number;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Represents a conversation thread\r\n */\r\nexport interface ChatThread {\r\n  id: string;\r\n  title: string;\r\n  messages: ChatMessage[];\r\n  createdAt: number;\r\n  updatedAt: number;\r\n  modelName: string;\r\n  metadata?: Record<string, any>;\r\n}","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"webextension-polyfill\", [\"module\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (module) {\n  /* webextension-polyfill - v0.10.0 - Fri Aug 12 2022 19:42:44 */\n\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n\n  /* vim: set sts=2 sw=2 et tw=80: */\n\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (!globalThis.chrome?.runtime?.id) {\n    throw new Error(\"This script should only be loaded in a browser extension.\");\n  }\n\n  if (typeof globalThis.browser === \"undefined\" || Object.getPrototypeOf(globalThis.browser) !== Object.prototype) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\"; // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n\n    const wrapAPIs = extensionAPIs => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2,\n              \"singleCallbackArg\": false\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            },\n            \"elements\": {\n              \"createSidebarPane\": {\n                \"minArgs\": 1,\n                \"maxArgs\": 1\n              }\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goBack\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goForward\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n\n\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n\n          return super.get(key);\n        }\n\n      }\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n\n\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n\n\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (extensionAPIs.runtime.lastError) {\n            promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n\n\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({\n                  resolve,\n                  reject\n                }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                target[name](...args); // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({\n                resolve,\n                reject\n              }, metadata));\n            }\n          });\n        };\n      };\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n\n\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n\n        });\n      };\n\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n\n            if (!(prop in target)) {\n              return undefined;\n            }\n\n            let value = target[prop];\n\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else if (hasOwnProperty(metadata, \"*\")) {\n              // Wrap all properties in * namespace.\n              value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n\n                get() {\n                  return target[prop];\n                },\n\n                set(value) {\n                  target[prop] = value;\n                }\n\n              });\n              return value;\n            }\n\n            cache[prop] = value;\n            return value;\n          },\n\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n\n            return true;\n          },\n\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n\n        }; // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n\n\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n\n      });\n\n      const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n        /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */\n\n\n        return function onRequestFinished(req) {\n          const wrappedReq = wrapObject(req, {}\n          /* wrappers */\n          , {\n            getContent: {\n              minArgs: 0,\n              maxArgs: 0\n            }\n          });\n          listener(wrappedReq);\n        };\n      });\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n\n\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n          let result;\n\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n\n          const isResultThenable = result !== true && isThenable(result); // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          } // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n\n\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          }; // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n\n\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          } // Let Chrome know that the listener is replying.\n\n\n          return true;\n        };\n      });\n\n      const wrappedSendMessageCallback = ({\n        reject,\n        resolve\n      }, reply) => {\n        if (extensionAPIs.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(new Error(extensionAPIs.runtime.lastError.message));\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, {\n            resolve,\n            reject\n          });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n\n      const staticWrappers = {\n        devtools: {\n          network: {\n            onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n          }\n        },\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 1,\n            maxArgs: 3\n          })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 2,\n            maxArgs: 3\n          })\n        }\n      };\n      const settingMetadata = {\n        clear: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        get: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        set: {\n          minArgs: 1,\n          maxArgs: 1\n        }\n      };\n      apiMetadata.privacy = {\n        network: {\n          \"*\": settingMetadata\n        },\n        services: {\n          \"*\": settingMetadata\n        },\n        websites: {\n          \"*\": settingMetadata\n        }\n      };\n      return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n    }; // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n\n\n    module.exports = wrapAPIs(chrome);\n  } else {\n    module.exports = globalThis.browser;\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import Browser from 'webextension-polyfill';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { \r\n  AIModel, \r\n  ChatThread, \r\n  ChatMessage, \r\n  SendMessageOptions, \r\n  AIModelError, \r\n  ErrorCode \r\n} from './types';\r\n\r\n/**\r\n * Abstract base class for all AI models\r\n */\r\nexport abstract class AbstractModel implements AIModel {\r\n  protected currentThread?: ChatThread;\r\n  private static readonly THREADS_STORAGE_KEY = 'chat_threads';\r\n  /**\r\n  * Get the name of the AI model\r\n  */\r\n  abstract getName(): string;\r\n  \r\n  /**\r\n   * Check if the model supports image input\r\n   */\r\n  abstract supportsImageInput(): boolean;\r\n  \r\n  /**\r\n   * Send a message to the AI model and get a response\r\n   * @param prompt The message to send\r\n   * @param options Additional options for the request\r\n   */\r\n  async sendMessage(prompt: string, options: SendMessageOptions = {}): Promise<string> {\r\n    try {\r\n      let fullResponse = '';\r\n      \r\n      await this.doSendMessage({\r\n        prompt,\r\n        image: options.image,\r\n        signal: options.signal,\r\n        onEvent: (event) => {\r\n          if (event.type === 'UPDATE_ANSWER') {\r\n            fullResponse = event.data.text;\r\n            options.onProgress?.(fullResponse);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return fullResponse;\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      \r\n      throw new AIModelError(\r\n        error instanceof Error ? error.message : String(error),\r\n        ErrorCode.UNKNOWN_ERROR\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Reset the conversation history\r\n   */\r\n  abstract initNewThread(): Promise<void>;\r\n\r\n  /**\r\n   * Internal method to send a message to the AI model\r\n   * @param params Parameters for sending a message\r\n   */\r\n  \r\n  protected abstract doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void>;\r\n\r\n  protected async loadThreadsFromStorage(): Promise<ChatThread[]> {\r\n    try {\r\n      const result = await Browser.storage.local.get(AbstractModel.THREADS_STORAGE_KEY);\r\n      return result[AbstractModel.THREADS_STORAGE_KEY] || [];\r\n    } catch (error) {\r\n      console.error('Failed to load threads from storage:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  protected async saveThreadsToStorage(threads: ChatThread[]): Promise<void> {\r\n    try {\r\n      await Browser.storage.local.set({ [AbstractModel.THREADS_STORAGE_KEY]: threads });\r\n    } catch (error) {\r\n      console.error('Failed to save threads to storage:', error);\r\n    }\r\n  }\r\n\r\n  getCurrentThread(): ChatThread | undefined {\r\n    return this.currentThread;\r\n  }\r\n\r\n  async loadThread(threadId: string): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    const thread = threads.find(t => t.id === threadId);\r\n    if (!thread) {\r\n      throw new Error('Thread not found');\r\n    }\r\n    this.currentThread = thread;\r\n  }\r\n\r\n  async saveThread(title?: string): Promise<void> {\r\n    if (!this.currentThread) {\r\n      throw new Error('No active thread to save');\r\n    }\r\n\r\n    const threads = await this.loadThreadsFromStorage();\r\n    const existingIndex = threads.findIndex(t => t.id === this.currentThread!.id);\r\n    \r\n    if (existingIndex !== -1) {\r\n      threads[existingIndex] = this.currentThread;\r\n    } else {\r\n      threads.push(this.currentThread);\r\n    }\r\n\r\n    await this.saveThreadsToStorage(threads);\r\n  }\r\n\r\n  async getAllThreads(): Promise<ChatThread[]> {\r\n    return this.loadThreadsFromStorage();\r\n  }\r\n\r\n  async deleteThread(threadId: string): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    await this.saveThreadsToStorage(threads.filter(t => t.id !== threadId));\r\n    \r\n    if (this.currentThread?.id === threadId) {\r\n      this.initNewThread();\r\n    }\r\n  }\r\n\r\n  protected createMessage(role: ChatMessage['role'], content: string): ChatMessage {\r\n    return {\r\n      id: uuid(),\r\n      role,\r\n      content,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}","const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nfunction jsonParseTransform(key, value) {\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\n    warnKeyDropped(key);\n    return;\n  }\n  return value;\n}\nfunction warnKeyDropped(key) {\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\n}\nfunction destr(value, options = {}) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const _value = value.trim();\n  if (\n    // eslint-disable-next-line unicorn/prefer-at\n    value[0] === '\"' && value.endsWith('\"') && !value.includes(\"\\\\\")\n  ) {\n    return _value.slice(1, -1);\n  }\n  if (_value.length <= 9) {\n    const _lval = _value.toLowerCase();\n    if (_lval === \"true\") {\n      return true;\n    }\n    if (_lval === \"false\") {\n      return false;\n    }\n    if (_lval === \"undefined\") {\n      return void 0;\n    }\n    if (_lval === \"null\") {\n      return null;\n    }\n    if (_lval === \"nan\") {\n      return Number.NaN;\n    }\n    if (_lval === \"infinity\") {\n      return Number.POSITIVE_INFINITY;\n    }\n    if (_lval === \"-infinity\") {\n      return Number.NEGATIVE_INFINITY;\n    }\n  }\n  if (!JsonSigRx.test(value)) {\n    if (options.strict) {\n      throw new SyntaxError(\"[destr] Invalid JSON\");\n    }\n    return value;\n  }\n  try {\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\n      if (options.strict) {\n        throw new Error(\"[destr] Possible prototype pollution\");\n      }\n      return JSON.parse(value, jsonParseTransform);\n    }\n    return JSON.parse(value);\n  } catch (error) {\n    if (options.strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction safeDestr(value, options = {}) {\n  return destr(value, { ...options, strict: true });\n}\n\nexport { destr as default, destr, safeDestr };\n","const n = /[^\\0-\\x7E]/;\nconst t = /[\\x2E\\u3002\\uFF0E\\uFF61]/g;\nconst o = {\n  overflow: \"Overflow Error\",\n  \"not-basic\": \"Illegal Input\",\n  \"invalid-input\": \"Invalid Input\"\n};\nconst e = Math.floor;\nconst r = String.fromCharCode;\nfunction s(n2) {\n  throw new RangeError(o[n2]);\n}\nconst c = function(n2, t2) {\n  return n2 + 22 + 75 * (n2 < 26) - ((t2 != 0) << 5);\n};\nconst u = function(n2, t2, o2) {\n  let r2 = 0;\n  for (n2 = o2 ? e(n2 / 700) : n2 >> 1, n2 += e(n2 / t2); n2 > 455; r2 += 36) {\n    n2 = e(n2 / 35);\n  }\n  return e(r2 + 36 * n2 / (n2 + 38));\n};\nfunction toASCII(o2) {\n  return function(n2, o3) {\n    const e2 = n2.split(\"@\");\n    let r2 = \"\";\n    e2.length > 1 && (r2 = e2[0] + \"@\", n2 = e2[1]);\n    const s2 = function(n3, t2) {\n      const o4 = [];\n      let e3 = n3.length;\n      for (; e3--; ) {\n        o4[e3] = t2(n3[e3]);\n      }\n      return o4;\n    }((n2 = n2.replace(t, \".\")).split(\".\"), o3).join(\".\");\n    return r2 + s2;\n  }(o2, function(t2) {\n    return n.test(t2) ? \"xn--\" + function(n2) {\n      const t3 = [];\n      const o3 = (n2 = function(n3) {\n        const t4 = [];\n        let o4 = 0;\n        const e2 = n3.length;\n        for (; o4 < e2; ) {\n          const r2 = n3.charCodeAt(o4++);\n          if (r2 >= 55296 && r2 <= 56319 && o4 < e2) {\n            const e3 = n3.charCodeAt(o4++);\n            (64512 & e3) == 56320 ? t4.push(((1023 & r2) << 10) + (1023 & e3) + 65536) : (t4.push(r2), o4--);\n          } else {\n            t4.push(r2);\n          }\n        }\n        return t4;\n      }(n2)).length;\n      let f = 128;\n      let i = 0;\n      let l = 72;\n      for (const o4 of n2) {\n        o4 < 128 && t3.push(r(o4));\n      }\n      const h = t3.length;\n      let p = h;\n      for (h && t3.push(\"-\"); p < o3; ) {\n        let o4 = 2147483647;\n        for (const t4 of n2) {\n          t4 >= f && t4 < o4 && (o4 = t4);\n        }\n        const a = p + 1;\n        o4 - f > e((2147483647 - i) / a) && s(\"overflow\"), i += (o4 - f) * a, f = o4;\n        for (const o5 of n2) {\n          if (o5 < f && ++i > 2147483647 && s(\"overflow\"), o5 == f) {\n            let n3 = i;\n            for (let o6 = 36; ; o6 += 36) {\n              const s2 = o6 <= l ? 1 : o6 >= l + 26 ? 26 : o6 - l;\n              if (n3 < s2) {\n                break;\n              }\n              const u2 = n3 - s2;\n              const f2 = 36 - s2;\n              t3.push(r(c(s2 + u2 % f2, 0))), n3 = e(u2 / f2);\n            }\n            t3.push(r(c(n3, 0))), l = u(i, a, p == h), i = 0, ++p;\n          }\n        }\n        ++i, ++f;\n      }\n      return t3.join(\"\");\n    }(t2) : t2;\n  });\n}\n\nconst HASH_RE = /#/g;\nconst AMPERSAND_RE = /&/g;\nconst SLASH_RE = /\\//g;\nconst EQUAL_RE = /=/g;\nconst IM_RE = /\\?/g;\nconst PLUS_RE = /\\+/g;\nconst ENC_CARET_RE = /%5e/gi;\nconst ENC_BACKTICK_RE = /%60/gi;\nconst ENC_CURLY_OPEN_RE = /%7b/gi;\nconst ENC_PIPE_RE = /%7c/gi;\nconst ENC_CURLY_CLOSE_RE = /%7d/gi;\nconst ENC_SPACE_RE = /%20/gi;\nconst ENC_SLASH_RE = /%2f/gi;\nconst ENC_ENC_SLASH_RE = /%252f/gi;\nfunction encode(text) {\n  return encodeURI(\"\" + text).replace(ENC_PIPE_RE, \"|\");\n}\nfunction encodeHash(text) {\n  return encode(text).replace(ENC_CURLY_OPEN_RE, \"{\").replace(ENC_CURLY_CLOSE_RE, \"}\").replace(ENC_CARET_RE, \"^\");\n}\nfunction encodeQueryValue(input) {\n  return encode(typeof input === \"string\" ? input : JSON.stringify(input)).replace(PLUS_RE, \"%2B\").replace(ENC_SPACE_RE, \"+\").replace(HASH_RE, \"%23\").replace(AMPERSAND_RE, \"%26\").replace(ENC_BACKTICK_RE, \"`\").replace(ENC_CARET_RE, \"^\").replace(SLASH_RE, \"%2F\");\n}\nfunction encodeQueryKey(text) {\n  return encodeQueryValue(text).replace(EQUAL_RE, \"%3D\");\n}\nfunction encodePath(text) {\n  return encode(text).replace(HASH_RE, \"%23\").replace(IM_RE, \"%3F\").replace(ENC_ENC_SLASH_RE, \"%2F\").replace(AMPERSAND_RE, \"%26\").replace(PLUS_RE, \"%2B\");\n}\nfunction encodeParam(text) {\n  return encodePath(text).replace(SLASH_RE, \"%2F\");\n}\nfunction decode(text = \"\") {\n  try {\n    return decodeURIComponent(\"\" + text);\n  } catch {\n    return \"\" + text;\n  }\n}\nfunction decodePath(text) {\n  return decode(text.replace(ENC_SLASH_RE, \"%252F\"));\n}\nfunction decodeQueryKey(text) {\n  return decode(text.replace(PLUS_RE, \" \"));\n}\nfunction decodeQueryValue(text) {\n  return decode(text.replace(PLUS_RE, \" \"));\n}\nfunction encodeHost(name = \"\") {\n  return toASCII(name);\n}\n\nfunction parseQuery(parametersString = \"\") {\n  const object = {};\n  if (parametersString[0] === \"?\") {\n    parametersString = parametersString.slice(1);\n  }\n  for (const parameter of parametersString.split(\"&\")) {\n    const s = parameter.match(/([^=]+)=?(.*)/) || [];\n    if (s.length < 2) {\n      continue;\n    }\n    const key = decodeQueryKey(s[1]);\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = decodeQueryValue(s[2] || \"\");\n    if (object[key] === void 0) {\n      object[key] = value;\n    } else if (Array.isArray(object[key])) {\n      object[key].push(value);\n    } else {\n      object[key] = [object[key], value];\n    }\n  }\n  return object;\n}\nfunction encodeQueryItem(key, value) {\n  if (typeof value === \"number\" || typeof value === \"boolean\") {\n    value = String(value);\n  }\n  if (!value) {\n    return encodeQueryKey(key);\n  }\n  if (Array.isArray(value)) {\n    return value.map((_value) => `${encodeQueryKey(key)}=${encodeQueryValue(_value)}`).join(\"&\");\n  }\n  return `${encodeQueryKey(key)}=${encodeQueryValue(value)}`;\n}\nfunction stringifyQuery(query) {\n  return Object.keys(query).filter((k) => query[k] !== void 0).map((k) => encodeQueryItem(k, query[k])).filter(Boolean).join(\"&\");\n}\n\nconst PROTOCOL_STRICT_REGEX = /^[\\s\\w\\0+.-]{2,}:([/\\\\]{1,2})/;\nconst PROTOCOL_REGEX = /^[\\s\\w\\0+.-]{2,}:([/\\\\]{2})?/;\nconst PROTOCOL_RELATIVE_REGEX = /^([/\\\\]\\s*){2,}[^/\\\\]/;\nconst PROTOCOL_SCRIPT_RE = /^[\\s\\0]*(blob|data|javascript|vbscript):$/i;\nconst TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nconst JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction isRelative(inputString) {\n  return [\"./\", \"../\"].some((string_) => inputString.startsWith(string_));\n}\nfunction hasProtocol(inputString, opts = {}) {\n  if (typeof opts === \"boolean\") {\n    opts = { acceptRelative: opts };\n  }\n  if (opts.strict) {\n    return PROTOCOL_STRICT_REGEX.test(inputString);\n  }\n  return PROTOCOL_REGEX.test(inputString) || (opts.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(inputString) : false);\n}\nfunction isScriptProtocol(protocol) {\n  return !!protocol && PROTOCOL_SCRIPT_RE.test(protocol);\n}\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  const cleanPath = s0.endsWith(\"/\") ? s0.slice(0, -1) : s0;\n  return (cleanPath || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map((string_) => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction withBase(input, base) {\n  if (isEmptyURL(base) || hasProtocol(input)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (input.startsWith(_base)) {\n    return input;\n  }\n  return joinURL(_base, input);\n}\nfunction withoutBase(input, base) {\n  if (isEmptyURL(base)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (!input.startsWith(_base)) {\n    return input;\n  }\n  const trimmed = input.slice(_base.length);\n  return trimmed[0] === \"/\" ? trimmed : \"/\" + trimmed;\n}\nfunction withQuery(input, query) {\n  const parsed = parseURL(input);\n  const mergedQuery = { ...parseQuery(parsed.search), ...query };\n  parsed.search = stringifyQuery(mergedQuery);\n  return stringifyParsedURL(parsed);\n}\nfunction getQuery(input) {\n  return parseQuery(parseURL(input).search);\n}\nfunction isEmptyURL(url) {\n  return !url || url === \"/\";\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\nfunction joinRelativeURL(..._input) {\n  const JOIN_SEGMENT_SPLIT_RE = /\\/(?!\\/)/;\n  const input = _input.filter(Boolean);\n  const segments = [];\n  let segmentsDepth = 0;\n  for (const i of input) {\n    if (!i || i === \"/\") {\n      continue;\n    }\n    for (const [sindex, s] of i.split(JOIN_SEGMENT_SPLIT_RE).entries()) {\n      if (!s || s === \".\") {\n        continue;\n      }\n      if (s === \"..\") {\n        if (segments.length === 1 && hasProtocol(segments[0])) {\n          continue;\n        }\n        segments.pop();\n        segmentsDepth--;\n        continue;\n      }\n      if (sindex === 1 && segments[segments.length - 1]?.endsWith(\":/\")) {\n        segments[segments.length - 1] += \"/\" + s;\n        continue;\n      }\n      segments.push(s);\n      segmentsDepth++;\n    }\n  }\n  let url = segments.join(\"/\");\n  if (segmentsDepth >= 0) {\n    if (input[0]?.startsWith(\"/\") && !url.startsWith(\"/\")) {\n      url = \"/\" + url;\n    } else if (input[0]?.startsWith(\"./\") && !url.startsWith(\"./\")) {\n      url = \"./\" + url;\n    }\n  } else {\n    url = \"../\".repeat(-1 * segmentsDepth) + url;\n  }\n  if (input[input.length - 1]?.endsWith(\"/\") && !url.endsWith(\"/\")) {\n    url += \"/\";\n  }\n  return url;\n}\nfunction withHttp(input) {\n  return withProtocol(input, \"http://\");\n}\nfunction withHttps(input) {\n  return withProtocol(input, \"https://\");\n}\nfunction withoutProtocol(input) {\n  return withProtocol(input, \"\");\n}\nfunction withProtocol(input, protocol) {\n  let match = input.match(PROTOCOL_REGEX);\n  if (!match) {\n    match = input.match(/^\\/{2,}/);\n  }\n  if (!match) {\n    return protocol + input;\n  }\n  return protocol + input.slice(match[0].length);\n}\nfunction normalizeURL(input) {\n  const parsed = parseURL(input);\n  parsed.pathname = encodePath(decodePath(parsed.pathname));\n  parsed.hash = encodeHash(decode(parsed.hash));\n  parsed.host = encodeHost(decode(parsed.host));\n  parsed.search = stringifyQuery(parseQuery(parsed.search));\n  return stringifyParsedURL(parsed);\n}\nfunction resolveURL(base = \"\", ...inputs) {\n  if (typeof base !== \"string\") {\n    throw new TypeError(\n      `URL input should be string received ${typeof base} (${base})`\n    );\n  }\n  const filteredInputs = inputs.filter((input) => isNonEmptyURL(input));\n  if (filteredInputs.length === 0) {\n    return base;\n  }\n  const url = parseURL(base);\n  for (const inputSegment of filteredInputs) {\n    const urlSegment = parseURL(inputSegment);\n    if (urlSegment.pathname) {\n      url.pathname = withTrailingSlash(url.pathname) + withoutLeadingSlash(urlSegment.pathname);\n    }\n    if (urlSegment.hash && urlSegment.hash !== \"#\") {\n      url.hash = urlSegment.hash;\n    }\n    if (urlSegment.search && urlSegment.search !== \"?\") {\n      if (url.search && url.search !== \"?\") {\n        const queryString = stringifyQuery({\n          ...parseQuery(url.search),\n          ...parseQuery(urlSegment.search)\n        });\n        url.search = queryString.length > 0 ? \"?\" + queryString : \"\";\n      } else {\n        url.search = urlSegment.search;\n      }\n    }\n  }\n  return stringifyParsedURL(url);\n}\nfunction isSamePath(p1, p2) {\n  return decode(withoutTrailingSlash(p1)) === decode(withoutTrailingSlash(p2));\n}\nfunction isEqual(a, b, options = {}) {\n  if (!options.trailingSlash) {\n    a = withTrailingSlash(a);\n    b = withTrailingSlash(b);\n  }\n  if (!options.leadingSlash) {\n    a = withLeadingSlash(a);\n    b = withLeadingSlash(b);\n  }\n  if (!options.encoding) {\n    a = decode(a);\n    b = decode(b);\n  }\n  return a === b;\n}\nfunction withFragment(input, hash) {\n  if (!hash || hash === \"#\") {\n    return input;\n  }\n  const parsed = parseURL(input);\n  parsed.hash = hash === \"\" ? \"\" : \"#\" + encodeHash(hash);\n  return stringifyParsedURL(parsed);\n}\nfunction withoutFragment(input) {\n  return stringifyParsedURL({ ...parseURL(input), hash: \"\" });\n}\nfunction withoutHost(input) {\n  const parsed = parseURL(input);\n  return (parsed.pathname || \"/\") + parsed.search + parsed.hash;\n}\n\nconst protocolRelative = Symbol.for(\"ufo:protocolRelative\");\nfunction parseURL(input = \"\", defaultProto) {\n  const _specialProtoMatch = input.match(\n    /^[\\s\\0]*(blob:|data:|javascript:|vbscript:)(.*)/i\n  );\n  if (_specialProtoMatch) {\n    const [, _proto, _pathname = \"\"] = _specialProtoMatch;\n    return {\n      protocol: _proto.toLowerCase(),\n      pathname: _pathname,\n      href: _proto + _pathname,\n      auth: \"\",\n      host: \"\",\n      search: \"\",\n      hash: \"\"\n    };\n  }\n  if (!hasProtocol(input, { acceptRelative: true })) {\n    return defaultProto ? parseURL(defaultProto + input) : parsePath(input);\n  }\n  const [, protocol = \"\", auth, hostAndPath = \"\"] = input.replace(/\\\\/g, \"/\").match(/^[\\s\\0]*([\\w+.-]{2,}:)?\\/\\/([^/@]+@)?(.*)/) || [];\n  let [, host = \"\", path = \"\"] = hostAndPath.match(/([^#/?]*)(.*)?/) || [];\n  if (protocol === \"file:\") {\n    path = path.replace(/\\/(?=[A-Za-z]:)/, \"\");\n  }\n  const { pathname, search, hash } = parsePath(path);\n  return {\n    protocol: protocol.toLowerCase(),\n    auth: auth ? auth.slice(0, Math.max(0, auth.length - 1)) : \"\",\n    host,\n    pathname,\n    search,\n    hash,\n    [protocolRelative]: !protocol\n  };\n}\nfunction parsePath(input = \"\") {\n  const [pathname = \"\", search = \"\", hash = \"\"] = (input.match(/([^#?]*)(\\?[^#]*)?(#.*)?/) || []).splice(1);\n  return {\n    pathname,\n    search,\n    hash\n  };\n}\nfunction parseAuth(input = \"\") {\n  const [username, password] = input.split(\":\");\n  return {\n    username: decode(username),\n    password: decode(password)\n  };\n}\nfunction parseHost(input = \"\") {\n  const [hostname, port] = (input.match(/([^/:]*):?(\\d+)?/) || []).splice(1);\n  return {\n    hostname: decode(hostname),\n    port\n  };\n}\nfunction stringifyParsedURL(parsed) {\n  const pathname = parsed.pathname || \"\";\n  const search = parsed.search ? (parsed.search.startsWith(\"?\") ? \"\" : \"?\") + parsed.search : \"\";\n  const hash = parsed.hash || \"\";\n  const auth = parsed.auth ? parsed.auth + \"@\" : \"\";\n  const host = parsed.host || \"\";\n  const proto = parsed.protocol || parsed[protocolRelative] ? (parsed.protocol || \"\") + \"//\" : \"\";\n  return proto + auth + host + pathname + search + hash;\n}\nconst FILENAME_STRICT_REGEX = /\\/([^/]+\\.[^/]+)$/;\nconst FILENAME_REGEX = /\\/([^/]+)$/;\nfunction parseFilename(input = \"\", { strict }) {\n  const { pathname } = parseURL(input);\n  const matches = strict ? pathname.match(FILENAME_STRICT_REGEX) : pathname.match(FILENAME_REGEX);\n  return matches ? matches[1] : void 0;\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass $URL {\n  constructor(input = \"\") {\n    __publicField(this, \"protocol\");\n    __publicField(this, \"host\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"pathname\");\n    __publicField(this, \"query\", {});\n    __publicField(this, \"hash\");\n    if (typeof input !== \"string\") {\n      throw new TypeError(\n        `URL input should be string received ${typeof input} (${input})`\n      );\n    }\n    const parsed = parseURL(input);\n    this.protocol = decode(parsed.protocol);\n    this.host = decode(parsed.host);\n    this.auth = decode(parsed.auth);\n    this.pathname = decodePath(parsed.pathname);\n    this.query = parseQuery(parsed.search);\n    this.hash = decode(parsed.hash);\n  }\n  get hostname() {\n    return parseHost(this.host).hostname;\n  }\n  get port() {\n    return parseHost(this.host).port || \"\";\n  }\n  get username() {\n    return parseAuth(this.auth).username;\n  }\n  get password() {\n    return parseAuth(this.auth).password || \"\";\n  }\n  get hasProtocol() {\n    return this.protocol.length;\n  }\n  get isAbsolute() {\n    return this.hasProtocol || this.pathname[0] === \"/\";\n  }\n  get search() {\n    const q = stringifyQuery(this.query);\n    return q.length > 0 ? \"?\" + q : \"\";\n  }\n  get searchParams() {\n    const p = new URLSearchParams();\n    for (const name in this.query) {\n      const value = this.query[name];\n      if (Array.isArray(value)) {\n        for (const v of value) {\n          p.append(name, v);\n        }\n      } else {\n        p.append(\n          name,\n          typeof value === \"string\" ? value : JSON.stringify(value)\n        );\n      }\n    }\n    return p;\n  }\n  get origin() {\n    return (this.protocol ? this.protocol + \"//\" : \"\") + encodeHost(this.host);\n  }\n  get fullpath() {\n    return encodePath(this.pathname) + this.search + encodeHash(this.hash);\n  }\n  get encodedAuth() {\n    if (!this.auth) {\n      return \"\";\n    }\n    const { username, password } = parseAuth(this.auth);\n    return encodeURIComponent(username) + (password ? \":\" + encodeURIComponent(password) : \"\");\n  }\n  get href() {\n    const auth = this.encodedAuth;\n    const originWithAuth = (this.protocol ? this.protocol + \"//\" : \"\") + (auth ? auth + \"@\" : \"\") + encodeHost(this.host);\n    return this.hasProtocol && this.isAbsolute ? originWithAuth + this.fullpath : this.fullpath;\n  }\n  append(url) {\n    if (url.hasProtocol) {\n      throw new Error(\"Cannot append a URL with protocol\");\n    }\n    Object.assign(this.query, url.query);\n    if (url.pathname) {\n      this.pathname = withTrailingSlash(this.pathname) + withoutLeadingSlash(url.pathname);\n    }\n    if (url.hash) {\n      this.hash = url.hash;\n    }\n  }\n  toJSON() {\n    return this.href;\n  }\n  toString() {\n    return this.href;\n  }\n}\nfunction createURL(input) {\n  return new $URL(input);\n}\n\nexport { $URL, cleanDoubleSlashes, createURL, decode, decodePath, decodeQueryKey, decodeQueryValue, encode, encodeHash, encodeHost, encodeParam, encodePath, encodeQueryItem, encodeQueryKey, encodeQueryValue, getQuery, hasLeadingSlash, hasProtocol, hasTrailingSlash, isEmptyURL, isEqual, isNonEmptyURL, isRelative, isSamePath, isScriptProtocol, joinRelativeURL, joinURL, normalizeURL, parseAuth, parseFilename, parseHost, parsePath, parseQuery, parseURL, resolveURL, stringifyParsedURL, stringifyQuery, withBase, withFragment, withHttp, withHttps, withLeadingSlash, withProtocol, withQuery, withTrailingSlash, withoutBase, withoutFragment, withoutHost, withoutLeadingSlash, withoutProtocol, withoutTrailingSlash };\n","import destr from 'destr';\nimport { withBase, withQuery } from 'ufo';\n\nclass FetchError extends Error {\n  constructor(message, opts) {\n    super(message, opts);\n    this.name = \"FetchError\";\n    if (opts?.cause && !this.cause) {\n      this.cause = opts.cause;\n    }\n  }\n}\nfunction createFetchError(ctx) {\n  const errorMessage = ctx.error?.message || ctx.error?.toString() || \"\";\n  const method = ctx.request?.method || ctx.options?.method || \"GET\";\n  const url = ctx.request?.url || String(ctx.request) || \"/\";\n  const requestStr = `[${method}] ${JSON.stringify(url)}`;\n  const statusStr = ctx.response ? `${ctx.response.status} ${ctx.response.statusText}` : \"<no response>\";\n  const message = `${requestStr}: ${statusStr}${errorMessage ? ` ${errorMessage}` : \"\"}`;\n  const fetchError = new FetchError(\n    message,\n    ctx.error ? { cause: ctx.error } : void 0\n  );\n  for (const key of [\"request\", \"options\", \"response\"]) {\n    Object.defineProperty(fetchError, key, {\n      get() {\n        return ctx[key];\n      }\n    });\n  }\n  for (const [key, refKey] of [\n    [\"data\", \"_data\"],\n    [\"status\", \"status\"],\n    [\"statusCode\", \"status\"],\n    [\"statusText\", \"statusText\"],\n    [\"statusMessage\", \"statusText\"]\n  ]) {\n    Object.defineProperty(fetchError, key, {\n      get() {\n        return ctx.response && ctx.response[refKey];\n      }\n    });\n  }\n  return fetchError;\n}\n\nconst payloadMethods = new Set(\n  Object.freeze([\"PATCH\", \"POST\", \"PUT\", \"DELETE\"])\n);\nfunction isPayloadMethod(method = \"GET\") {\n  return payloadMethods.has(method.toUpperCase());\n}\nfunction isJSONSerializable(value) {\n  if (value === void 0) {\n    return false;\n  }\n  const t = typeof value;\n  if (t === \"string\" || t === \"number\" || t === \"boolean\" || t === null) {\n    return true;\n  }\n  if (t !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(value)) {\n    return true;\n  }\n  if (value.buffer) {\n    return false;\n  }\n  return value.constructor && value.constructor.name === \"Object\" || typeof value.toJSON === \"function\";\n}\nconst textTypes = /* @__PURE__ */ new Set([\n  \"image/svg\",\n  \"application/xml\",\n  \"application/xhtml\",\n  \"application/html\"\n]);\nconst JSON_RE = /^application\\/(?:[\\w!#$%&*.^`~-]*\\+)?json(;.+)?$/i;\nfunction detectResponseType(_contentType = \"\") {\n  if (!_contentType) {\n    return \"json\";\n  }\n  const contentType = _contentType.split(\";\").shift() || \"\";\n  if (JSON_RE.test(contentType)) {\n    return \"json\";\n  }\n  if (textTypes.has(contentType) || contentType.startsWith(\"text/\")) {\n    return \"text\";\n  }\n  return \"blob\";\n}\nfunction resolveFetchOptions(request, input, defaults, Headers) {\n  const headers = mergeHeaders(\n    input?.headers ?? request?.headers,\n    defaults?.headers,\n    Headers\n  );\n  let query;\n  if (defaults?.query || defaults?.params || input?.params || input?.query) {\n    query = {\n      ...defaults?.params,\n      ...defaults?.query,\n      ...input?.params,\n      ...input?.query\n    };\n  }\n  return {\n    ...defaults,\n    ...input,\n    query,\n    params: query,\n    headers\n  };\n}\nfunction mergeHeaders(input, defaults, Headers) {\n  if (!defaults) {\n    return new Headers(input);\n  }\n  const headers = new Headers(defaults);\n  if (input) {\n    for (const [key, value] of Symbol.iterator in input || Array.isArray(input) ? input : new Headers(input)) {\n      headers.set(key, value);\n    }\n  }\n  return headers;\n}\nasync function callHooks(context, hooks) {\n  if (hooks) {\n    if (Array.isArray(hooks)) {\n      for (const hook of hooks) {\n        await hook(context);\n      }\n    } else {\n      await hooks(context);\n    }\n  }\n}\n\nconst retryStatusCodes = /* @__PURE__ */ new Set([\n  408,\n  // Request Timeout\n  409,\n  // Conflict\n  425,\n  // Too Early (Experimental)\n  429,\n  // Too Many Requests\n  500,\n  // Internal Server Error\n  502,\n  // Bad Gateway\n  503,\n  // Service Unavailable\n  504\n  // Gateway Timeout\n]);\nconst nullBodyResponses = /* @__PURE__ */ new Set([101, 204, 205, 304]);\nfunction createFetch(globalOptions = {}) {\n  const {\n    fetch = globalThis.fetch,\n    Headers = globalThis.Headers,\n    AbortController = globalThis.AbortController\n  } = globalOptions;\n  async function onError(context) {\n    const isAbort = context.error && context.error.name === \"AbortError\" && !context.options.timeout || false;\n    if (context.options.retry !== false && !isAbort) {\n      let retries;\n      if (typeof context.options.retry === \"number\") {\n        retries = context.options.retry;\n      } else {\n        retries = isPayloadMethod(context.options.method) ? 0 : 1;\n      }\n      const responseCode = context.response && context.response.status || 500;\n      if (retries > 0 && (Array.isArray(context.options.retryStatusCodes) ? context.options.retryStatusCodes.includes(responseCode) : retryStatusCodes.has(responseCode))) {\n        const retryDelay = typeof context.options.retryDelay === \"function\" ? context.options.retryDelay(context) : context.options.retryDelay || 0;\n        if (retryDelay > 0) {\n          await new Promise((resolve) => setTimeout(resolve, retryDelay));\n        }\n        return $fetchRaw(context.request, {\n          ...context.options,\n          retry: retries - 1\n        });\n      }\n    }\n    const error = createFetchError(context);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(error, $fetchRaw);\n    }\n    throw error;\n  }\n  const $fetchRaw = async function $fetchRaw2(_request, _options = {}) {\n    const context = {\n      request: _request,\n      options: resolveFetchOptions(\n        _request,\n        _options,\n        globalOptions.defaults,\n        Headers\n      ),\n      response: void 0,\n      error: void 0\n    };\n    if (context.options.method) {\n      context.options.method = context.options.method.toUpperCase();\n    }\n    if (context.options.onRequest) {\n      await callHooks(context, context.options.onRequest);\n    }\n    if (typeof context.request === \"string\") {\n      if (context.options.baseURL) {\n        context.request = withBase(context.request, context.options.baseURL);\n      }\n      if (context.options.query) {\n        context.request = withQuery(context.request, context.options.query);\n        delete context.options.query;\n      }\n      if (\"query\" in context.options) {\n        delete context.options.query;\n      }\n      if (\"params\" in context.options) {\n        delete context.options.params;\n      }\n    }\n    if (context.options.body && isPayloadMethod(context.options.method)) {\n      if (isJSONSerializable(context.options.body)) {\n        context.options.body = typeof context.options.body === \"string\" ? context.options.body : JSON.stringify(context.options.body);\n        context.options.headers = new Headers(context.options.headers || {});\n        if (!context.options.headers.has(\"content-type\")) {\n          context.options.headers.set(\"content-type\", \"application/json\");\n        }\n        if (!context.options.headers.has(\"accept\")) {\n          context.options.headers.set(\"accept\", \"application/json\");\n        }\n      } else if (\n        // ReadableStream Body\n        \"pipeTo\" in context.options.body && typeof context.options.body.pipeTo === \"function\" || // Node.js Stream Body\n        typeof context.options.body.pipe === \"function\"\n      ) {\n        if (!(\"duplex\" in context.options)) {\n          context.options.duplex = \"half\";\n        }\n      }\n    }\n    let abortTimeout;\n    if (!context.options.signal && context.options.timeout) {\n      const controller = new AbortController();\n      abortTimeout = setTimeout(() => {\n        const error = new Error(\n          \"[TimeoutError]: The operation was aborted due to timeout\"\n        );\n        error.name = \"TimeoutError\";\n        error.code = 23;\n        controller.abort(error);\n      }, context.options.timeout);\n      context.options.signal = controller.signal;\n    }\n    try {\n      context.response = await fetch(\n        context.request,\n        context.options\n      );\n    } catch (error) {\n      context.error = error;\n      if (context.options.onRequestError) {\n        await callHooks(\n          context,\n          context.options.onRequestError\n        );\n      }\n      return await onError(context);\n    } finally {\n      if (abortTimeout) {\n        clearTimeout(abortTimeout);\n      }\n    }\n    const hasBody = (context.response.body || // https://github.com/unjs/ofetch/issues/324\n    // https://github.com/unjs/ofetch/issues/294\n    // https://github.com/JakeChampion/fetch/issues/1454\n    context.response._bodyInit) && !nullBodyResponses.has(context.response.status) && context.options.method !== \"HEAD\";\n    if (hasBody) {\n      const responseType = (context.options.parseResponse ? \"json\" : context.options.responseType) || detectResponseType(context.response.headers.get(\"content-type\") || \"\");\n      switch (responseType) {\n        case \"json\": {\n          const data = await context.response.text();\n          const parseFunction = context.options.parseResponse || destr;\n          context.response._data = parseFunction(data);\n          break;\n        }\n        case \"stream\": {\n          context.response._data = context.response.body || context.response._bodyInit;\n          break;\n        }\n        default: {\n          context.response._data = await context.response[responseType]();\n        }\n      }\n    }\n    if (context.options.onResponse) {\n      await callHooks(\n        context,\n        context.options.onResponse\n      );\n    }\n    if (!context.options.ignoreResponseError && context.response.status >= 400 && context.response.status < 600) {\n      if (context.options.onResponseError) {\n        await callHooks(\n          context,\n          context.options.onResponseError\n        );\n      }\n      return await onError(context);\n    }\n    return context.response;\n  };\n  const $fetch = async function $fetch2(request, options) {\n    const r = await $fetchRaw(request, options);\n    return r._data;\n  };\n  $fetch.raw = $fetchRaw;\n  $fetch.native = (...args) => fetch(...args);\n  $fetch.create = (defaultOptions = {}, customGlobalOptions = {}) => createFetch({\n    ...globalOptions,\n    ...customGlobalOptions,\n    defaults: {\n      ...globalOptions.defaults,\n      ...customGlobalOptions.defaults,\n      ...defaultOptions\n    }\n  });\n  return $fetch;\n}\n\nexport { FetchError as F, createFetchError as a, createFetch as c };\n","import { c as createFetch } from './shared/ofetch.03887fc3.mjs';\nexport { F as FetchError, a as createFetchError } from './shared/ofetch.03887fc3.mjs';\nimport 'destr';\nimport 'ufo';\n\nconst _globalThis = function() {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw new Error(\"unable to locate global object\");\n}();\nconst fetch = _globalThis.fetch ? (...args) => _globalThis.fetch(...args) : () => Promise.reject(new Error(\"[ofetch] global.fetch is not supported!\"));\nconst Headers = _globalThis.Headers;\nconst AbortController = _globalThis.AbortController;\nconst ofetch = createFetch({ fetch, Headers, AbortController });\nconst $fetch = ofetch;\n\nexport { $fetch, AbortController, Headers, createFetch, fetch, ofetch };\n","import { ofetch } from 'ofetch';\r\nimport Browser from 'webextension-polyfill';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\n\r\n// REMOVE: Old ConversationContext interface\r\n// ADD: New Bard-specific metadata interface\r\ninterface BardThreadMetadata {\r\n  contextIds: [string, string, string];\r\n  requestParams: {\r\n    atValue: string;\r\n    blValue: string;\r\n  };\r\n}\r\n\r\n\r\n// Helper functions\r\nfunction generateReqId() {\r\n  return Math.floor(Math.random() * 900000) + 100000;\r\n}\r\nfunction extractFromHTML(variableName: string, html: string) {\r\n  const regex = new RegExp(`\"${variableName}\":\"([^\"]+)\"`)\r\n  const match = regex.exec(html)\r\n  return match?.[1]\r\n}\r\n\r\nexport class BardModel extends AbstractModel {\r\n  constructor() {\r\n    super();\r\n    // Initialize storage and validate threads\r\n    this.initializeStorage().catch(console.error);\r\n  }\r\n\r\n  private async initializeStorage(): Promise<void> {\r\n    // Ensure threads storage exists\r\n    const threads = await this.loadThreadsFromStorage();\r\n    if (!threads.length) {\r\n      await this.saveThreadsToStorage([]);\r\n    }\r\n    await this.validateExistingThreads();\r\n  }\r\n\r\n  private async validateExistingThreads(): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    let hasChanges = false;\r\n\r\n    for (const thread of threads) {\r\n      if (thread.modelName === this.getName() && !this.isValidBardMetadata(thread.metadata)) {\r\n        await this.deleteThread(thread.id);\r\n        hasChanges = true;\r\n      }\r\n    }\r\n\r\n    if (hasChanges) {\r\n      await this.saveThreadsToStorage(threads.filter(t =>\r\n        t.modelName !== this.getName() || this.isValidBardMetadata(t.metadata)\r\n      ));\r\n    }\r\n  }\r\n\r\n  private isValidBardMetadata(metadata: any): metadata is BardThreadMetadata {\r\n    return metadata?.contextIds && metadata?.requestParams;\r\n  }\r\n\r\n\r\n  getName(): string {\r\n    return 'Google Bard';\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return true;\r\n  }\r\n\r\n \r\n  private async fetchRequestParams(): Promise<{ atValue: string; blValue: string }> {\r\n    try {\r\n      const response = await ofetch('https://gemini.google.com/', {\r\n        responseType: 'text'\r\n      });\r\n\r\n      const atValue = extractFromHTML('SNlM0e', response);\r\n      const blValue = extractFromHTML('cfb2h', response);\r\n\r\n      if (!atValue || !blValue) {\r\n        throw new AIModelError('Failed to extract Bard parameters', ErrorCode.UNAUTHORIZED);\r\n      }\r\n\r\n      return { atValue, blValue };\r\n    } catch (error) {\r\n      throw new AIModelError(\r\n        'Failed to initialize Bard session',\r\n        ErrorCode.UNAUTHORIZED\r\n      );\r\n    }\r\n  }\r\n\r\n  // KEEP: Response parsing with image support\r\n  private parseBardResponse(responseText: string): { text: string; ids: [string, string, string] } {\r\n    try {\r\n      const lines = responseText.split('\\n');\r\n      const jsonPart = lines.find(line => line.startsWith('['));\r\n      \r\n      if (!jsonPart) {\r\n        throw new Error('Invalid response format');\r\n      }\r\n\r\n      const data = JSON.parse(jsonPart);\r\n      const payload = JSON.parse(data[0][2]);\r\n\r\n      if (!payload) {\r\n        throw new Error('Empty response data');\r\n      }\r\n\r\n      const text = payload[4][0][1][0];\r\n      const ids: [string, string, string] = [\r\n        payload[1][0], // conversationId\r\n        payload[1][1], // responseId\r\n        payload[4][0][0], // choiceId\r\n      ];\r\n\r\n      const images = payload[4][0][4] || [];\r\n      let processedText = text;\r\n      \r\n      for (const image of images) {\r\n        const [media, source, placeholder] = image;\r\n        processedText = processedText.replace(placeholder, `[![${media[4]}](${media[0][0]})](${source[0][0]})`);\r\n      }\r\n\r\n      return { text: processedText, ids };\r\n    } catch (error) {\r\n      console.error('Error parsing Bard response:', error);\r\n      throw new AIModelError('Failed to parse Bard response', ErrorCode.UNKNOWN_ERROR);\r\n    }\r\n  }\r\n\r\n  // KEEP: Image upload functionality\r\n  private async uploadImage(image: File): Promise<string> {\r\n    const headers = {\r\n      'content-type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n      'push-id': 'feeds/mcudyrk2a4khkz',\r\n      'x-goog-upload-header-content-length': image.size.toString(),\r\n      'x-goog-upload-protocol': 'resumable',\r\n      'x-tenant-id': 'bard-storage',\r\n    };\r\n\r\n    const resp = await ofetch.raw('https://content-push.googleapis.com/upload/', {\r\n      method: 'POST',\r\n      headers: {\r\n        ...headers,\r\n        'x-goog-upload-command': 'start',\r\n      },\r\n      body: new URLSearchParams({ [`File name: ${image.name}`]: '' }),\r\n    });\r\n\r\n    const uploadUrl = resp.headers.get('x-goog-upload-url');\r\n    if (!uploadUrl) {\r\n      throw new AIModelError('Failed to upload image', ErrorCode.UNKNOWN_ERROR);\r\n    }\r\n\r\n    const uploadResult = await ofetch(uploadUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        ...headers,\r\n        'x-goog-upload-command': 'upload, finalize',\r\n        'x-goog-upload-offset': '0',\r\n      },\r\n      body: image,\r\n    });\r\n\r\n    return uploadResult as string;\r\n  }\r\n\r\n  // UPDATE: Main message handling method to use thread system\r\n  // Add this method to properly retrieve the thread from storage before each request\r\n  private async ensureThreadLoaded(): Promise<void> {\r\n    if (!this.currentThread) {\r\n      // Try to load the most recent thread for this model\r\n      const threads = await this.loadThreadsFromStorage();\r\n      const bardThreads = threads.filter(t => \r\n        t.modelName === this.getName() && this.isValidBardMetadata(t.metadata)\r\n      );\r\n      \r\n      if (bardThreads.length > 0) {\r\n        // Sort by most recent and use that thread\r\n        const mostRecentThread = bardThreads.sort((a, b) => b.updatedAt - a.updatedAt)[0];\r\n        this.currentThread = mostRecentThread;\r\n        console.log('Loaded existing thread from storage:', this.currentThread.id);\r\n      } else {\r\n        // Create a new thread if none exists\r\n        await this.initNewThread();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update doSendMessage to use the ensureThreadLoaded method\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    try {\r\n      params.onEvent({\r\n        type: 'UPDATE_ANSWER',\r\n        data: { text: '' }\r\n      });\r\n\r\n      // Make sure we have a valid thread with the latest data from storage\r\n      await this.ensureThreadLoaded();\r\n\r\n      // Now we can safely assert that currentThread exists\r\n      const currentThread = this.getCurrentThreadSafe();\r\n\r\n      // Add user message\r\n      const userMessage = this.createMessage('user', params.prompt);\r\n      currentThread.messages.push(userMessage);\r\n\r\n      // Get Bard-specific metadata\r\n      const metadata = this.getBardMetadata();\r\n      \r\n      // IMPORTANT: Log the context IDs to verify they're being retrieved correctly\r\n      console.log('Current context IDs before request:', metadata.contextIds);\r\n      \r\n      // Handle image upload\r\n      let imageUrl: string | undefined;\r\n      if (params.image) {\r\n        imageUrl = await this.uploadImage(params.image);\r\n      }\r\n\r\n      const payload = [\r\n        null,\r\n        JSON.stringify([\r\n          [params.prompt, 0, null, imageUrl ? [[[imageUrl, 1], params.image!.name]] : []],\r\n          null,\r\n          metadata.contextIds,\r\n        ]),\r\n      ];\r\n\r\n      const resp = await ofetch(\r\n        'https://gemini.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate',\r\n        {\r\n          method: 'POST',\r\n          signal: params.signal,\r\n          query: {\r\n            bl: metadata.requestParams.blValue,\r\n            _reqid: generateReqId(),\r\n            rt: 'c',\r\n          },\r\n          body: new URLSearchParams({\r\n            at: metadata.requestParams.atValue,\r\n            'f.req': JSON.stringify(payload),\r\n          }),\r\n          parseResponse: (txt) => txt,\r\n        },\r\n      );\r\n\r\n      const { text, ids } = this.parseBardResponse(resp);\r\n      \r\n      // Log the new context IDs\r\n      console.log('New context IDs after response:', ids);\r\n      \r\n      // Update thread with assistant's response\r\n      const assistantMessage = this.createMessage('assistant', text);\r\n      assistantMessage.metadata = { messageId: ids[0] };\r\n      currentThread.messages.push(assistantMessage);\r\n      \r\n      // Update thread metadata with new context IDs\r\n      if (currentThread.metadata) {\r\n        (currentThread.metadata as BardThreadMetadata).contextIds = ids;\r\n      }\r\n      currentThread.updatedAt = Date.now();\r\n      \r\n      // Save thread to storage - FIXED: Only save once using the proper method\r\n      await this.saveThread();\r\n      \r\n      // REMOVED: The duplicate thread saving code that was causing duplicates\r\n      // No longer loading all threads and saving again\r\n\r\n      // Send events\r\n      params.onEvent({\r\n        type: 'UPDATE_ANSWER',\r\n        data: { \r\n          text,\r\n          messageId: ids[0],\r\n          conversationId: ids[1],\r\n          messages: currentThread.messages\r\n        }\r\n      });\r\n\r\n      params.onEvent({ type: 'DONE' });\r\n    } catch (error) {\r\n      params.onEvent({\r\n        type: 'ERROR',\r\n        data: {\r\n          error: error instanceof AIModelError ? error : new AIModelError(\r\n            error instanceof Error ? error.message : String(error),\r\n            ErrorCode.NETWORK_ERROR\r\n          )\r\n        }\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // OVERRIDE: Thread loading to handle Bard session refresh\r\n  async loadThread(threadId: string): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    const thread = threads.find(t => t.id === threadId);\r\n    \r\n    if (thread && thread.modelName === this.getName()) {\r\n      this.currentThread = thread;\r\n      // Refresh Bard session\r\n      const metadata = this.currentThread.metadata as BardThreadMetadata;\r\n      metadata.requestParams = await this.fetchRequestParams();\r\n      await this.saveThread();\r\n      await this.saveThreadsToStorage(threads);\r\n    }\r\n  }\r\n\r\n  private getBardMetadata(): BardThreadMetadata {\r\n    const currentThread = this.getCurrentThreadSafe();\r\n    \r\n    if (!currentThread.metadata) {\r\n      throw new AIModelError('No thread metadata available', ErrorCode.INVALID_REQUEST);\r\n    }\r\n    \r\n    const metadata = currentThread.metadata as BardThreadMetadata;\r\n    if (!metadata.contextIds || !metadata.requestParams) {\r\n      throw new AIModelError('Invalid thread metadata', ErrorCode.INVALID_REQUEST);\r\n    }\r\n    \r\n    return metadata;\r\n  }\r\n\r\n  private getCurrentThreadSafe(): NonNullable<typeof this.currentThread> {\r\n    if (!this.currentThread) {\r\n      throw new AIModelError('No active thread', ErrorCode.INVALID_REQUEST);\r\n    }\r\n    return this.currentThread;\r\n  }\r\n\r\n\r\n  async initNewThread(): Promise<void> {\r\n    this.currentThread = {\r\n      id: uuid(),\r\n      title: 'New Conversation',\r\n      messages: [],\r\n      createdAt: Date.now(),\r\n      updatedAt: Date.now(),\r\n      modelName: this.getName(),\r\n      metadata: {\r\n        contextIds: ['', '', ''],\r\n        requestParams: await this.fetchRequestParams()\r\n      }\r\n    };\r\n    \r\n    // FIXED: Only save once using the proper method\r\n    await this.saveThread();\r\n    // REMOVED: The duplicate thread saving code\r\n  }\r\n\r\n  // Add a new method to properly save the thread\r\n  // Changed from protected to public to match parent class\r\n  public async saveThread(): Promise<void> {\r\n    if (!this.currentThread) return;\r\n    \r\n    // Load all threads\r\n    const threads = await this.loadThreadsFromStorage();\r\n    \r\n    // Find if this thread already exists\r\n    const existingIndex = threads.findIndex(t => t.id === this.currentThread!.id);\r\n    \r\n    if (existingIndex !== -1) {\r\n      // Update existing thread\r\n      threads[existingIndex] = this.currentThread;\r\n    } else {\r\n      // Add new thread\r\n      threads.push(this.currentThread);\r\n    }\r\n    \r\n    // Save all threads\r\n    await this.saveThreadsToStorage(threads);\r\n  }\r\n}","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","import { ofetch } from 'ofetch';\r\nimport { v4 as uuid } from 'uuid';\r\nimport WebSocket from 'isomorphic-ws';\r\nimport { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\nimport browser from 'webextension-polyfill';\r\nimport { requestHostPermission } from '../utils/permissions';\r\n\r\n// Bing conversation styles (now Copilot styles)\r\nexport enum BingConversationStyle {\r\n  Creative = 'creative',\r\n  Balanced = 'balanced',\r\n  Precise = 'precise'\r\n}\r\n\r\n// Bing-specific thread metadata\r\ninterface BingThreadMetadata {\r\n  conversationId: string;\r\n  conversationStyle: BingConversationStyle;\r\n}\r\n\r\nexport class BingModel extends AbstractModel {\r\n  constructor(private conversationStyle: BingConversationStyle = BingConversationStyle.Balanced) {\r\n    super();\r\n    // Initialize storage and validate threads\r\n    this.initializeStorage().catch(console.error);\r\n  }\r\n\r\n  private async initializeStorage(): Promise<void> {\r\n    // Ensure threads storage exists\r\n    const threads = await this.loadThreadsFromStorage();\r\n    if (!threads.length) {\r\n      await this.saveThreadsToStorage([]);\r\n    }\r\n    await this.validateExistingThreads();\r\n  }\r\n\r\n  private async validateExistingThreads(): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    let hasChanges = false;\r\n\r\n    for (const thread of threads) {\r\n      if (thread.modelName === this.getName() && !this.isValidBingMetadata(thread.metadata)) {\r\n        await this.deleteThread(thread.id);\r\n        hasChanges = true;\r\n      }\r\n    }\r\n\r\n    if (hasChanges) {\r\n      await this.saveThreadsToStorage(threads.filter(t =>\r\n        t.modelName !== this.getName() || this.isValidBingMetadata(t.metadata)\r\n      ));\r\n    }\r\n  }\r\n\r\n  private isValidBingMetadata(metadata: any): metadata is BingThreadMetadata {\r\n    return metadata?.conversationId;\r\n  }\r\n\r\n  getName(): string {\r\n    return `Bing ${this.conversationStyle.charAt(0).toUpperCase() + this.conversationStyle.slice(1)}`;\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return true;\r\n  }\r\n\r\n  // Create a new conversation with Copilot\r\n  private async createConversation(): Promise<BingThreadMetadata> {\r\n    try {\r\n      // Check for permission first\r\n      if (!(await requestHostPermission('https://copilot.microsoft.com/'))) {\r\n        throw new AIModelError('Missing copilot.microsoft.com permission', ErrorCode.MISSING_HOST_PERMISSION);\r\n      }\r\n\r\n      const response = await fetch('https://copilot.microsoft.com/c/api/conversations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'accept': 'application/json',\r\n          'accept-language': 'en-US,en;q=0.9',\r\n          'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({}),\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new AIModelError(`Failed to create conversation: ${response.status}`, ErrorCode.SERVICE_UNAVAILABLE);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('Copilot conversation response:', data);\r\n\r\n      if (!data.id) {\r\n        throw new AIModelError('Failed to create Copilot conversation', ErrorCode.SERVICE_UNAVAILABLE);\r\n      }\r\n\r\n      return {\r\n        conversationId: data.id,\r\n        conversationStyle: this.conversationStyle\r\n      };\r\n    } catch (error) {\r\n      console.error('Error initializing Copilot session:', error);\r\n      throw new AIModelError(\r\n        'Failed to initialize Copilot session',\r\n        ErrorCode.UNAUTHORIZED\r\n      );\r\n    }\r\n  }\r\n\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    try {\r\n      // Check for permission first\r\n      if (!(await requestHostPermission('wss://copilot.microsoft.com/'))) {\r\n        throw new AIModelError('Missing copilot.microsoft.com permission', ErrorCode.MISSING_HOST_PERMISSION);\r\n      }\r\n\r\n      params.onEvent({\r\n        type: 'UPDATE_ANSWER',\r\n        data: { text: '' }\r\n      });\r\n\r\n      // Make sure we have a valid thread with the latest data from storage\r\n      await this.ensureThreadLoaded();\r\n\r\n      // Now we can safely assert that currentThread exists\r\n      const currentThread = this.getCurrentThreadSafe();\r\n\r\n      // Add user message\r\n      const userMessage = this.createMessage('user', params.prompt);\r\n      currentThread.messages.push(userMessage);\r\n\r\n      // Get Bing-specific metadata\r\n      const metadata = this.getBingMetadata();\r\n      \r\n      // Handle image upload if provided\r\n      if (params.image) {\r\n        throw new AIModelError('Image upload not yet implemented for new Copilot API', ErrorCode.UNKNOWN_ERROR);\r\n      }\r\n\r\n      let fullResponse = '';\r\n      let suggestedResponses: string[] = [];\r\n\r\n      // Create WebSocket connection\r\n      const ws = new WebSocket('wss://copilot.microsoft.com/c/api/chat?api-version=2');\r\n      \r\n      ws.onopen = () => {\r\n        console.log('WebSocket connection opened');\r\n        // Send the chat message once the connection is established\r\n        const chatMessage = {\r\n          event: \"send\",\r\n          mode: \"chat\",\r\n          conversationId: metadata.conversationId,\r\n          content: [\r\n            {\r\n              type: \"text\",\r\n              text: params.prompt\r\n            }\r\n          ]\r\n        };\r\n        ws.send(JSON.stringify(chatMessage));\r\n      };\r\n      \r\n      ws.onmessage = (event: WebSocket.MessageEvent) => {\r\n        try {\r\n          const data = event.data;\r\n          const response = JSON.parse(data);\r\n          console.log('WebSocket message:', response);\r\n          \r\n          if (response.event === \"received\") {\r\n            // Message received by the server\r\n            console.log('Message received by server:', response.messageId);\r\n          } else if (response.event === \"startMessage\") {\r\n            // Start of the assistant's response\r\n            console.log('Assistant starting response:', response.messageId);\r\n          } else if (response.event === \"appendText\") {\r\n            // Append text to the current response\r\n            fullResponse += response.text || '';\r\n            \r\n            // Update the UI with the current response\r\n            params.onEvent({\r\n              type: 'UPDATE_ANSWER',\r\n              data: { text: fullResponse }\r\n            });\r\n          } else if (response.event === \"done\") {\r\n            // End of the response\r\n            // Update thread with assistant's response\r\n            const assistantMessage = this.createMessage('assistant', fullResponse);\r\n            currentThread.messages.push(assistantMessage);\r\n            \r\n            // Update thread\r\n            currentThread.updatedAt = Date.now();\r\n            \r\n            // Save thread to storage\r\n            this.saveThread();\r\n            \r\n            params.onEvent({ type: 'DONE' });\r\n            \r\n            // Close the WebSocket\r\n            ws.close();\r\n          } else if (response.event === \"suggestedFollowups\" && response.suggestions) {\r\n            // Store suggested responses\r\n            suggestedResponses = response.suggestions.map((s: any) => s);\r\n            \r\n            // If we have an assistant message, add the suggestions as metadata\r\n            if (currentThread.messages.length > 0) {\r\n              const lastMessage = currentThread.messages[currentThread.messages.length - 1];\r\n              if (lastMessage.role === 'assistant') {\r\n                lastMessage.metadata = { suggestedResponses };\r\n                this.saveThread();\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing Copilot response:', error);\r\n        }\r\n      };\r\n      \r\n      ws.onerror = (error: WebSocket.ErrorEvent) => {\r\n        console.error('WebSocket error:', error);\r\n        params.onEvent({\r\n          type: 'ERROR',\r\n          data: {\r\n            error: new AIModelError(\r\n              'WebSocket connection error',\r\n              ErrorCode.NETWORK_ERROR\r\n            )\r\n          }\r\n        });\r\n      };\r\n      \r\n      ws.onclose = () => {\r\n        console.log('WebSocket connection closed');\r\n      };\r\n\r\n      // Handle abort signal\r\n      if (params.signal) {\r\n        params.signal.addEventListener('abort', () => {\r\n          ws.close();\r\n        });\r\n      }\r\n    } catch (error) {\r\n      params.onEvent({\r\n        type: 'ERROR',\r\n        data: {\r\n          error: error instanceof AIModelError ? error : new AIModelError(\r\n            error instanceof Error ? error.message : String(error),\r\n            ErrorCode.NETWORK_ERROR\r\n          )\r\n        }\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n\r\nprivate async ensureThreadLoaded(): Promise<void> {\r\n  if (!this.currentThread) {\r\n    // Try to load the most recent thread for this model\r\n    const threads = await this.loadThreadsFromStorage();\r\n    const bingThreads = threads.filter(t => \r\n      t.modelName === this.getName() && this.isValidBingMetadata(t.metadata)\r\n    );\r\n    \r\n    if (bingThreads.length > 0) {\r\n      // Sort by most recent and use that thread\r\n      const mostRecentThread = bingThreads.sort((a, b) => b.updatedAt - a.updatedAt)[0];\r\n      this.currentThread = mostRecentThread;\r\n      console.log('Loaded existing thread from storage:', this.currentThread.id);\r\n    } else {\r\n      // Create a new thread if none exists\r\n      await this.initNewThread();\r\n    }\r\n  }\r\n}\r\n\r\nprivate getCurrentThreadSafe(): NonNullable<typeof this.currentThread> {\r\n  if (!this.currentThread) {\r\n    throw new AIModelError('No active thread', ErrorCode.INVALID_REQUEST);\r\n  }\r\n  return this.currentThread;\r\n}\r\n\r\nprivate getBingMetadata(): BingThreadMetadata {\r\n  const currentThread = this.getCurrentThreadSafe();\r\n  \r\n  if (!currentThread.metadata) {\r\n    throw new AIModelError('No thread metadata available', ErrorCode.INVALID_REQUEST);\r\n  }\r\n  \r\n  const metadata = currentThread.metadata as BingThreadMetadata;\r\n  if (!this.isValidBingMetadata(metadata)) {\r\n    throw new AIModelError('Invalid thread metadata', ErrorCode.INVALID_REQUEST);\r\n  }\r\n  \r\n  return metadata;\r\n}\r\n\r\nasync initNewThread(): Promise<void> {\r\n  const conversationInfo = await this.createConversation();\r\n  \r\n  this.currentThread = {\r\n    id: uuid(),\r\n    title: 'New Conversation',\r\n    messages: [],\r\n    createdAt: Date.now(),\r\n    updatedAt: Date.now(),\r\n    modelName: this.getName(),\r\n    metadata: conversationInfo\r\n  };\r\n  \r\n  await this.saveThread();\r\n}\r\n\r\nasync loadThread(threadId: string): Promise<void> {\r\n  const threads = await this.loadThreadsFromStorage();\r\n  const thread = threads.find(t => t.id === threadId);\r\n  \r\n  if (thread && thread.modelName === this.getName()) {\r\n    // For Bing/Copilot, we need to create a new conversation each time\r\n    // as the old conversations expire quickly\r\n    const conversationInfo = await this.createConversation();\r\n    \r\n    this.currentThread = {\r\n      ...thread,\r\n      metadata: conversationInfo\r\n    };\r\n    \r\n    await this.saveThread();\r\n  } else {\r\n    throw new Error('Thread not found');\r\n  }\r\n}\r\n\r\nprivate async uploadImage(image: File): Promise<string> {\r\n  try {\r\n    // Note: Image upload implementation would need to be updated for the new Copilot API\r\n    // This is a placeholder that would need to be implemented based on the actual API\r\n    throw new AIModelError('Image upload not yet implemented for new Copilot API', ErrorCode.UNKNOWN_ERROR);\r\n  } catch (error) {\r\n    throw new AIModelError('Failed to upload image to Copilot', ErrorCode.UNKNOWN_ERROR);\r\n  }\r\n}\r\n}","import browser from 'webextension-polyfill';\r\n\r\nexport async function requestHostPermissions(hosts: string[]) {\r\n  const permissions: browser.Permissions.Permissions = { origins: hosts };\r\n  if (await browser.permissions.contains(permissions)) {\r\n    return true;\r\n  }\r\n  return browser.permissions.request(permissions);\r\n}\r\n\r\nexport async function requestHostPermission(host: string) {\r\n  return requestHostPermissions([host]);\r\n}","/**\r\n * Convert a file to a base64 data URL\r\n * @param file The file to convert\r\n * @param withPrefix Whether to include the data URL prefix\r\n */\r\nexport function file2base64(file: File, withPrefix = false): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      const result = reader.result as string;\r\n      if (withPrefix) {\r\n        resolve(result);\r\n      } else {\r\n        // Remove the data URL prefix (e.g., \"data:image/png;base64,\")\r\n        resolve(result.split(',')[1]);\r\n      }\r\n    };\r\n    reader.onerror = reject;\r\n  });\r\n}","/**\r\n * Parse a Server-Sent Events response\r\n * @param response The response to parse\r\n * @param onMessage Callback for each message\r\n */\r\nexport async function parseSSEResponse(response: Response, onMessage: (message: string) => void) {\r\n  const reader = response.body!.getReader();\r\n  const decoder = new TextDecoder();\r\n  let buffer = '';\r\n  \r\n  while (true) {\r\n    const { done, value } = await reader.read();\r\n    if (done) {\r\n      break;\r\n    }\r\n    \r\n    buffer += decoder.decode(value, { stream: true });\r\n    const lines = buffer.split('\\n');\r\n    \r\n    buffer = lines.pop() || '';\r\n    \r\n    for (const line of lines) {\r\n      const trimmedLine = line.trim();\r\n      if (!trimmedLine) continue;\r\n      \r\n      if (trimmedLine.startsWith('data: ')) {\r\n        const data = trimmedLine.slice(6);\r\n        onMessage(data);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Handle any remaining data\r\n  if (buffer.trim() && buffer.startsWith('data: ')) {\r\n    const data = buffer.slice(6);\r\n    onMessage(data);\r\n  }\r\n}","/**\r\n * Convert a ReadableStream to an AsyncIterable\r\n * @param stream The stream to convert\r\n */\r\nexport async function* streamAsyncIterable(stream: ReadableStream<Uint8Array>) {\r\n  const reader = stream.getReader();\r\n  try {\r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) {\r\n        return;\r\n      }\r\n      yield value;\r\n    }\r\n  } finally {\r\n    reader.releaseLock();\r\n  }\r\n}"],"names":["ErrorCode","AIModelError","Error","constructor","message","code","UNKNOWN_ERROR","super","this","name","globalThis","self","module","chrome","runtime","id","browser","Object","getPrototypeOf","prototype","CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE","wrapAPIs","extensionAPIs","apiMetadata","alarms","clear","minArgs","maxArgs","clearAll","get","getAll","bookmarks","create","getChildren","getRecent","getSubTree","getTree","move","remove","removeTree","search","update","browserAction","disable","fallbackToNoCallback","enable","getBadgeBackgroundColor","getBadgeText","getPopup","getTitle","openPopup","setBadgeBackgroundColor","setBadgeText","setIcon","setPopup","setTitle","browsingData","removeCache","removeCookies","removeDownloads","removeFormData","removeHistory","removeLocalStorage","removePasswords","removePluginData","settings","commands","contextMenus","removeAll","cookies","getAllCookieStores","set","devtools","inspectedWindow","eval","singleCallbackArg","panels","elements","createSidebarPane","downloads","cancel","download","erase","getFileIcon","open","pause","removeFile","resume","show","extension","isAllowedFileSchemeAccess","isAllowedIncognitoAccess","history","addUrl","deleteAll","deleteRange","deleteUrl","getVisits","i18n","detectLanguage","getAcceptLanguages","identity","launchWebAuthFlow","idle","queryState","management","getSelf","setEnabled","uninstallSelf","notifications","getPermissionLevel","pageAction","hide","permissions","contains","request","getBackgroundPage","getPlatformInfo","openOptionsPage","requestUpdateCheck","sendMessage","sendNativeMessage","setUninstallURL","sessions","getDevices","getRecentlyClosed","restore","storage","local","getBytesInUse","managed","sync","tabs","captureVisibleTab","discard","duplicate","executeScript","getCurrent","getZoom","getZoomSettings","goBack","goForward","highlight","insertCSS","query","reload","removeCSS","setZoom","setZoomSettings","topSites","webNavigation","getAllFrames","getFrame","webRequest","handlerBehaviorChanged","windows","getLastFocused","keys","length","DefaultWeakMap","WeakMap","createItem","items","undefined","key","has","isThenable","value","then","makeCallback","promise","metadata","callbackArgs","lastError","reject","resolve","pluralizeArguments","numArgs","wrapAsyncFunction","target","args","Promise","cbError","console","warn","noCallback","wrapMethod","method","wrapper","Proxy","apply","targetMethod","thisObj","call","hasOwnProperty","Function","bind","wrapObject","wrappers","cache","handlers","proxyTarget","prop","receiver","defineProperty","configurable","enumerable","desc","Reflect","deleteProperty","wrapEvent","wrapperMap","addListener","listener","hasListener","removeListener","onRequestFinishedWrappers","req","wrappedReq","getContent","onMessageWrappers","sender","sendResponse","wrappedSendResponse","result","didCallSendResponse","sendResponsePromise","response","err","isResultThenable","sendPromisedResult","msg","error","__mozWebExtensionPolyfillReject__","catch","wrappedSendMessageCallback","reply","wrappedSendMessage","apiNamespaceObj","wrappedCb","push","staticWrappers","network","onRequestFinished","onMessage","onMessageExternal","settingMetadata","privacy","services","websites","exports","factory","getRandomValues","rnds8","Uint8Array","rng","crypto","byteToHex","i","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","AbstractModel","prompt","fullResponse","doSendMessage","image","signal","onEvent","event","type","data","text","onProgress","String","loadThreadsFromStorage","Browser","THREADS_STORAGE_KEY","saveThreadsToStorage","threads","getCurrentThread","currentThread","loadThread","threadId","thread","find","t","saveThread","title","existingIndex","findIndex","getAllThreads","deleteThread","filter","initNewThread","createMessage","role","content","uuid","timestamp","Date","now","suspectProtoRx","suspectConstructorRx","JsonSigRx","jsonParseTransform","warnKeyDropped","destr","_value","trim","endsWith","includes","_lval","toLowerCase","Number","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","test","strict","SyntaxError","JSON","parse","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","PLUS_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_PIPE_RE","ENC_SPACE_RE","encodeQueryValue","input","stringify","encodeURI","replace","encodeQueryKey","decode","decodeURIComponent","decodeQueryValue","parseQuery","parametersString","object","parameter","split","s","match","Array","isArray","stringifyQuery","k","map","encodeQueryItem","join","Boolean","PROTOCOL_STRICT_REGEX","PROTOCOL_REGEX","PROTOCOL_RELATIVE_REGEX","JOIN_LEADING_SLASH_RE","hasProtocol","inputString","opts","acceptRelative","withTrailingSlash","respectQueryAndFragment","withBase","base","url","_base","hasTrailingSlash","withoutTrailingSlash","startsWith","segment","url2","isNonEmptyURL","_segment","joinURL","withQuery","parsed","_specialProtoMatch","_proto","_pathname","protocol","pathname","href","auth","host","hash","parsePath","hostAndPath","path","Math","max","protocolRelative","parseURL","mergedQuery","proto","stringifyParsedURL","Symbol","for","splice","FetchError","cause","payloadMethods","Set","freeze","isPayloadMethod","toUpperCase","textTypes","JSON_RE","resolveFetchOptions","defaults","Headers","headers","iterator","mergeHeaders","params","async","callHooks","context","hooks","hook","retryStatusCodes","nullBodyResponses","_globalThis","window","global","ofetch","createFetch","globalOptions","fetch","AbortController","onError","isAbort","timeout","retry","retries","responseCode","status","retryDelay","setTimeout","$fetchRaw","ctx","errorMessage","requestStr","statusStr","statusText","fetchError","refKey","createFetchError","captureStackTrace","_request","_options","abortTimeout","onRequest","baseURL","body","buffer","toJSON","isJSONSerializable","pipeTo","pipe","duplex","controller","abort","onRequestError","clearTimeout","_bodyInit","responseType","parseResponse","_contentType","contentType","shift","detectResponseType","parseFunction","_data","onResponse","ignoreResponseError","onResponseError","$fetch","raw","defaultOptions","customGlobalOptions","extractFromHTML","variableName","html","RegExp","exec","BINARY_TYPES","hasBlob","Blob","constants","EMPTY_BUFFER","Buffer","alloc","GUID","kForOnEventAttribute","kListener","kStatusCode","kWebSocket","NOOP","require$$0","FastBuffer","species","_mask","source","mask","output","_unmask","bufferUtil$1","concat","list","totalLength","allocUnsafe","byteOffset","toArrayBuffer","byteLength","toBuffer","readOnly","isBuffer","ArrayBuffer","isView","from","unmask","process","env","WS_NO_BUFFER_UTIL","bufferUtil","require","bufferUtilModule","e","kDone","kRun","zlib","require$$1","Limiter","concurrency","pending","Infinity","jobs","add","job","require$$3","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","permessageDeflate","isServer","maxPayload","_maxPayload","_threshold","threshold","_isServer","_deflate","_inflate","concurrencyLimit","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","configurations","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","callback","offers","accepted","forEach","num","isInteger","TypeError","decompress","fin","done","_decompress","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","on","inflateOnError","inflateOnData","write","flush","_readableState","endEmitted","reset","createDeflateRaw","zlibDeflateOptions","deflateOnData","Z_SYNC_FLUSH","chunk","RangeError","isUtf8","_isValidUTF8","len","validation","isBlob","arrayBuffer","stream","toStringTag","isValidStatusCode","isValidUTF8","tokenChars","validationModule","WS_NO_UTF_8_VALIDATE","Writable","PerMessageDeflate","require$$2","require$$4","_allowSynchronousEvents","allowSynchronousEvents","_binaryType","binaryType","_extensions","extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_errored","_loop","_state","_write","encoding","cb","startLoop","consume","n","dst","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","createError","compressed","haveLength","readUInt16BE","readUInt32BE","pow","controlMessage","dataMessage","messageLength","fragments","emit","setImmediate","end","ErrorCtor","prefix","statusCode","errorCode","Duplex","randomFillSync","applyMask","require$$5","kByteLength","maskBuffer","RANDOM_POOL_SIZE","randomPool","randomPoolPointer","Sender","socket","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_queue","onerror","frame","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","ping","size","getBlobData","pong","send","perMessageDeflate","binary","blob","destroyed","nextTick","callCallbacks","dequeue","_","cork","uncork","kCode","kData","kMessage","kReason","kTarget","kType","kWasClean","Event","CloseEvent","reason","wasClean","ErrorEvent","MessageEvent","eventTarget","EventTarget","addEventListener","handler","listeners","isBinary","callListener","_closeFrameReceived","_closeFrameSent","once","removeEventListener","thisArg","handleEvent","dest","elem","format","values","v","header","paramName","mustUnescape","isEscaping","inQuotes","start","charCodeAt","token","EventEmitter","https","http","net","tls","randomBytes","createHash","Readable","require$$6","URL","require$$7","require$$8","Receiver","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","kAborted","protocolVersions","readyStates","subprotocolRegex","WebSocket","address","protocols","_closeCode","_closeMessage","_closeTimer","_errorEmitted","_paused","_protocol","_readyState","CONNECTING","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","_autoPong","autoPong","bufferedAmount","_writableState","isPaused","onclose","onopen","onmessage","readyState","_url","setSocket","head","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","senderOnError","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","OPEN","emitClose","CLOSED","removeAllListeners","CLOSING","errorEmitted","setCloseTimer","abortHandshake","_req","sendAfterClose","needDrain","terminate","destroy","indexOf","property","websocket","protocolVersion","followRedirects","maxRedirects","socketPath","hostname","port","parsedUrl","isSecure","isIpcUrl","invalidUrlMessage","emitErrorAndClose","defaultPort","protocolSet","createConnection","tlsConnect","netConnect","Connection","Upgrade","handshakeTimeout","origin","Origin","username","password","parts","_originalIpc","_originalSecure","_originalHostOrSocketPath","entries","listenerCount","isSameHost","authorization","cookie","res","location","addr","upgrade","digest","serverProt","protError","secWebSocketExtensions","extensionNames","finishRequest","connect","servername","isIP","setHeader","receiverOnFinish","read","finished","duplexOnEnd","duplexOnError","ws","terminateOnDestroy","autoDestroy","objectMode","writableObjectMode","_destroy","called","_final","_read","subprotocol","keyRegex","websocketServer","handleProtocols","clientTracking","verifyClient","noServer","backlog","server","_server","createServer","STATUS_CODES","writeHead","listen","emitConnection","_removeListeners","addListeners","listening","handleUpgrade","clients","_shouldEmitClose","shouldHandle","index","version","abortHandshakeOrEmitwsClientError","secWebSocketProtocol","info","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","next","delete","h","WebSocket$1","createWebSocketStream","Server","WebSocketServer","BingConversationStyle","requestHostPermission","hosts","origins","requestHostPermissions","initializeStorage","validateExistingThreads","hasChanges","modelName","getName","isValidBardMetadata","contextIds","requestParams","supportsImageInput","fetchRequestParams","atValue","blValue","UNAUTHORIZED","parseBardResponse","responseText","jsonPart","line","payload","ids","images","processedText","media","placeholder","uploadImage","uploadUrl","URLSearchParams","ensureThreadLoaded","bardThreads","mostRecentThread","sort","a","b","updatedAt","log","getCurrentThreadSafe","userMessage","messages","getBardMetadata","imageUrl","resp","bl","_reqid","floor","rt","at","txt","assistantMessage","messageId","conversationId","NETWORK_ERROR","INVALID_REQUEST","createdAt","conversationStyle","Balanced","isValidBingMetadata","charAt","createConversation","MISSING_HOST_PERMISSION","credentials","ok","SERVICE_UNAVAILABLE","json","getBingMetadata","suggestedResponses","chatMessage","mode","suggestions","lastMessage","bingThreads","conversationInfo","file","withPrefix","reader","FileReader","readAsDataURL","onload","getReader","decoder","TextDecoder","lines","pop","trimmedLine","releaseLock"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}