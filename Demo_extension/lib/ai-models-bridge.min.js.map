{"version":3,"file":"ai-models-bridge.min.js","sources":["../src/models/types.ts","../node_modules/webextension-polyfill/dist/browser-polyfill.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/models/abstract-model.ts","../src/utils/stream-async-iterable.ts","../src/utils/sse.ts","../src/utils/file.ts","../node_modules/destr/dist/index.mjs","../node_modules/ufo/dist/index.mjs","../node_modules/ofetch/dist/shared/ofetch.03887fc3.mjs","../node_modules/ofetch/dist/index.mjs","../src/models/bard.ts","../node_modules/@google/generative-ai/dist/index.mjs","../src/models/baichuan-web.ts","../src/models/chatgpt-api.ts","../src/models/claude-web.ts","../src/models/gemini-api.ts","../src/models/openrouter.ts"],"sourcesContent":["/**\r\n * Interface for all AI models\r\n */\r\nexport interface AIModel {\r\n  /**\r\n   * Get the name of the AI model\r\n   */\r\n  getName(): string;\r\n  \r\n  /**\r\n   * Check if the model supports image input\r\n   */\r\n  supportsImageInput(): boolean;\r\n  \r\n  /**\r\n   * Send a message to the AI model and get a response\r\n   * @param prompt The message to send\r\n   * @param options Additional options for the request\r\n   */\r\n  sendMessage(prompt: string, options?: SendMessageOptions): Promise<string>;\r\n  \r\n  /**\r\n   * Reset the conversation history\r\n   */\r\n  initNewThread(): void;\r\n\r\n  /**\r\n   * Get the current conversation thread\r\n   */\r\n  getCurrentThread(): ChatThread | undefined;\r\n\r\n  /**\r\n   * Load a specific conversation thread\r\n   */\r\n  loadThread(threadId: string): Promise<void>;\r\n\r\n  /**\r\n   * Save the current conversation thread\r\n   */\r\n  saveThread(title?: string): Promise<void>;\r\n\r\n  /**\r\n   * Get all saved conversation threads\r\n   */\r\n  getAllThreads(): Promise<ChatThread[]>;\r\n\r\n  /**\r\n   * Delete a conversation thread\r\n   */\r\n  deleteThread(threadId: string): Promise<void>;\r\n}\r\n\r\n/**\r\n * Options for sending a message\r\n */\r\nexport interface SendMessageOptions {\r\n  /**\r\n   * Image to include with the message (if supported)\r\n   */\r\n  image?: File;\r\n  \r\n  /**\r\n   * Signal to abort the request\r\n   */\r\n  signal?: AbortSignal;\r\n  \r\n  /**\r\n   * Callback for streaming responses\r\n   * @param text The current text of the response\r\n   */\r\n  onProgress?: (text: string) => void;\r\n}\r\n\r\n/**\r\n * Error codes for AI model errors\r\n */\r\nexport enum ErrorCode {\r\n  UNKNOWN_ERROR = 'unknown_error',\r\n  NETWORK_ERROR = 'network_error',\r\n  UNAUTHORIZED = 'unauthorized',\r\n  SERVICE_UNAVAILABLE = 'service_unavailable',\r\n  MISSING_API_KEY = 'missing_api_key',\r\n  MISSING_HOST_PERMISSION = 'missing_host_permission',\r\n  CONVERSATION_LIMIT = 'conversation_limit',\r\n  CONTENT_FILTERED = 'content_filtered',\r\n  INVALID_REQUEST = 'invalid_request',\r\n}\r\n\r\n/**\r\n * Error class for AI model errors\r\n */\r\nexport class AIModelError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public code: ErrorCode = ErrorCode.UNKNOWN_ERROR\r\n  ) {\r\n    super(message);\r\n    this.name = 'AIModelError';\r\n  }\r\n}\r\n\r\n/**\r\n * Represents a message in a conversation\r\n */\r\nexport interface ChatMessage {\r\n  id: string;\r\n  role: 'user' | 'assistant' | 'system';\r\n  content: string;\r\n  timestamp: number;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Represents a conversation thread\r\n */\r\nexport interface ChatThread {\r\n  id: string;\r\n  title: string;\r\n  messages: ChatMessage[];\r\n  createdAt: number;\r\n  updatedAt: number;\r\n  modelName: string;\r\n  metadata?: Record<string, any>;\r\n}","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"webextension-polyfill\", [\"module\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (module) {\n  /* webextension-polyfill - v0.10.0 - Fri Aug 12 2022 19:42:44 */\n\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n\n  /* vim: set sts=2 sw=2 et tw=80: */\n\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (!globalThis.chrome?.runtime?.id) {\n    throw new Error(\"This script should only be loaded in a browser extension.\");\n  }\n\n  if (typeof globalThis.browser === \"undefined\" || Object.getPrototypeOf(globalThis.browser) !== Object.prototype) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\"; // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n\n    const wrapAPIs = extensionAPIs => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2,\n              \"singleCallbackArg\": false\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            },\n            \"elements\": {\n              \"createSidebarPane\": {\n                \"minArgs\": 1,\n                \"maxArgs\": 1\n              }\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goBack\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goForward\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n\n\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n\n          return super.get(key);\n        }\n\n      }\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n\n\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n\n\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (extensionAPIs.runtime.lastError) {\n            promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n\n\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({\n                  resolve,\n                  reject\n                }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                target[name](...args); // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({\n                resolve,\n                reject\n              }, metadata));\n            }\n          });\n        };\n      };\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n\n\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n\n        });\n      };\n\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n\n            if (!(prop in target)) {\n              return undefined;\n            }\n\n            let value = target[prop];\n\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else if (hasOwnProperty(metadata, \"*\")) {\n              // Wrap all properties in * namespace.\n              value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n\n                get() {\n                  return target[prop];\n                },\n\n                set(value) {\n                  target[prop] = value;\n                }\n\n              });\n              return value;\n            }\n\n            cache[prop] = value;\n            return value;\n          },\n\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n\n            return true;\n          },\n\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n\n        }; // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n\n\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n\n      });\n\n      const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n        /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */\n\n\n        return function onRequestFinished(req) {\n          const wrappedReq = wrapObject(req, {}\n          /* wrappers */\n          , {\n            getContent: {\n              minArgs: 0,\n              maxArgs: 0\n            }\n          });\n          listener(wrappedReq);\n        };\n      });\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n\n\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n          let result;\n\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n\n          const isResultThenable = result !== true && isThenable(result); // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          } // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n\n\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          }; // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n\n\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          } // Let Chrome know that the listener is replying.\n\n\n          return true;\n        };\n      });\n\n      const wrappedSendMessageCallback = ({\n        reject,\n        resolve\n      }, reply) => {\n        if (extensionAPIs.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(new Error(extensionAPIs.runtime.lastError.message));\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, {\n            resolve,\n            reject\n          });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n\n      const staticWrappers = {\n        devtools: {\n          network: {\n            onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n          }\n        },\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 1,\n            maxArgs: 3\n          })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 2,\n            maxArgs: 3\n          })\n        }\n      };\n      const settingMetadata = {\n        clear: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        get: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        set: {\n          minArgs: 1,\n          maxArgs: 1\n        }\n      };\n      apiMetadata.privacy = {\n        network: {\n          \"*\": settingMetadata\n        },\n        services: {\n          \"*\": settingMetadata\n        },\n        websites: {\n          \"*\": settingMetadata\n        }\n      };\n      return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n    }; // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n\n\n    module.exports = wrapAPIs(chrome);\n  } else {\n    module.exports = globalThis.browser;\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import Browser from 'webextension-polyfill';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { \r\n  AIModel, \r\n  ChatThread, \r\n  ChatMessage, \r\n  SendMessageOptions, \r\n  AIModelError, \r\n  ErrorCode \r\n} from './types';\r\n\r\n/**\r\n * Abstract base class for all AI models\r\n */\r\nexport abstract class AbstractModel implements AIModel {\r\n  protected currentThread?: ChatThread;\r\n  private static readonly THREADS_STORAGE_KEY = 'chat_threads';\r\n  /**\r\n  * Get the name of the AI model\r\n  */\r\n  abstract getName(): string;\r\n  \r\n  /**\r\n   * Check if the model supports image input\r\n   */\r\n  abstract supportsImageInput(): boolean;\r\n  \r\n  /**\r\n   * Send a message to the AI model and get a response\r\n   * @param prompt The message to send\r\n   * @param options Additional options for the request\r\n   */\r\n  async sendMessage(prompt: string, options: SendMessageOptions = {}): Promise<string> {\r\n    try {\r\n      let fullResponse = '';\r\n      \r\n      await this.doSendMessage({\r\n        prompt,\r\n        image: options.image,\r\n        signal: options.signal,\r\n        onEvent: (event) => {\r\n          if (event.type === 'UPDATE_ANSWER') {\r\n            fullResponse = event.data.text;\r\n            options.onProgress?.(fullResponse);\r\n          }\r\n        }\r\n      });\r\n      \r\n      return fullResponse;\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      \r\n      throw new AIModelError(\r\n        error instanceof Error ? error.message : String(error),\r\n        ErrorCode.UNKNOWN_ERROR\r\n      );\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Reset the conversation history\r\n   */\r\n  abstract initNewThread(): Promise<void>;\r\n\r\n  /**\r\n   * Internal method to send a message to the AI model\r\n   * @param params Parameters for sending a message\r\n   */\r\n  \r\n  protected abstract doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void>;\r\n\r\n  protected async loadThreadsFromStorage(): Promise<ChatThread[]> {\r\n    try {\r\n      const result = await Browser.storage.local.get(AbstractModel.THREADS_STORAGE_KEY);\r\n      return result[AbstractModel.THREADS_STORAGE_KEY] || [];\r\n    } catch (error) {\r\n      console.error('Failed to load threads from storage:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  protected async saveThreadsToStorage(threads: ChatThread[]): Promise<void> {\r\n    try {\r\n      await Browser.storage.local.set({ [AbstractModel.THREADS_STORAGE_KEY]: threads });\r\n    } catch (error) {\r\n      console.error('Failed to save threads to storage:', error);\r\n    }\r\n  }\r\n\r\n  getCurrentThread(): ChatThread | undefined {\r\n    return this.currentThread;\r\n  }\r\n\r\n  async loadThread(threadId: string): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    const thread = threads.find(t => t.id === threadId);\r\n    if (!thread) {\r\n      throw new Error('Thread not found');\r\n    }\r\n    this.currentThread = thread;\r\n  }\r\n\r\n  async saveThread(title?: string): Promise<void> {\r\n    if (!this.currentThread) {\r\n      throw new Error('No active thread to save');\r\n    }\r\n\r\n    const threads = await this.loadThreadsFromStorage();\r\n    const existingIndex = threads.findIndex(t => t.id === this.currentThread!.id);\r\n    \r\n    if (existingIndex !== -1) {\r\n      threads[existingIndex] = this.currentThread;\r\n    } else {\r\n      threads.push(this.currentThread);\r\n    }\r\n\r\n    await this.saveThreadsToStorage(threads);\r\n  }\r\n\r\n  async getAllThreads(): Promise<ChatThread[]> {\r\n    return this.loadThreadsFromStorage();\r\n  }\r\n\r\n  async deleteThread(threadId: string): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    await this.saveThreadsToStorage(threads.filter(t => t.id !== threadId));\r\n    \r\n    if (this.currentThread?.id === threadId) {\r\n      this.initNewThread();\r\n    }\r\n  }\r\n\r\n  protected createMessage(role: ChatMessage['role'], content: string): ChatMessage {\r\n    return {\r\n      id: uuid(),\r\n      role,\r\n      content,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n}","/**\r\n * Convert a ReadableStream to an AsyncIterable\r\n * @param stream The stream to convert\r\n */\r\nexport async function* streamAsyncIterable(stream: ReadableStream<Uint8Array>) {\r\n  const reader = stream.getReader();\r\n  try {\r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      if (done) {\r\n        return;\r\n      }\r\n      yield value;\r\n    }\r\n  } finally {\r\n    reader.releaseLock();\r\n  }\r\n}","/**\r\n * Parse a Server-Sent Events response\r\n * @param response The response to parse\r\n * @param onMessage Callback for each message\r\n */\r\nexport async function parseSSEResponse(response: Response, onMessage: (message: string) => void) {\r\n  const reader = response.body!.getReader();\r\n  const decoder = new TextDecoder();\r\n  let buffer = '';\r\n  \r\n  while (true) {\r\n    const { done, value } = await reader.read();\r\n    if (done) {\r\n      break;\r\n    }\r\n    \r\n    buffer += decoder.decode(value, { stream: true });\r\n    const lines = buffer.split('\\n');\r\n    \r\n    buffer = lines.pop() || '';\r\n    \r\n    for (const line of lines) {\r\n      const trimmedLine = line.trim();\r\n      if (!trimmedLine) continue;\r\n      \r\n      if (trimmedLine.startsWith('data: ')) {\r\n        const data = trimmedLine.slice(6);\r\n        onMessage(data);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Handle any remaining data\r\n  if (buffer.trim() && buffer.startsWith('data: ')) {\r\n    const data = buffer.slice(6);\r\n    onMessage(data);\r\n  }\r\n}","/**\r\n * Convert a file to a base64 data URL\r\n * @param file The file to convert\r\n * @param withPrefix Whether to include the data URL prefix\r\n */\r\nexport function file2base64(file: File, withPrefix = false): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      const result = reader.result as string;\r\n      if (withPrefix) {\r\n        resolve(result);\r\n      } else {\r\n        // Remove the data URL prefix (e.g., \"data:image/png;base64,\")\r\n        resolve(result.split(',')[1]);\r\n      }\r\n    };\r\n    reader.onerror = reject;\r\n  });\r\n}","const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nfunction jsonParseTransform(key, value) {\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\n    warnKeyDropped(key);\n    return;\n  }\n  return value;\n}\nfunction warnKeyDropped(key) {\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\n}\nfunction destr(value, options = {}) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const _value = value.trim();\n  if (\n    // eslint-disable-next-line unicorn/prefer-at\n    value[0] === '\"' && value.endsWith('\"') && !value.includes(\"\\\\\")\n  ) {\n    return _value.slice(1, -1);\n  }\n  if (_value.length <= 9) {\n    const _lval = _value.toLowerCase();\n    if (_lval === \"true\") {\n      return true;\n    }\n    if (_lval === \"false\") {\n      return false;\n    }\n    if (_lval === \"undefined\") {\n      return void 0;\n    }\n    if (_lval === \"null\") {\n      return null;\n    }\n    if (_lval === \"nan\") {\n      return Number.NaN;\n    }\n    if (_lval === \"infinity\") {\n      return Number.POSITIVE_INFINITY;\n    }\n    if (_lval === \"-infinity\") {\n      return Number.NEGATIVE_INFINITY;\n    }\n  }\n  if (!JsonSigRx.test(value)) {\n    if (options.strict) {\n      throw new SyntaxError(\"[destr] Invalid JSON\");\n    }\n    return value;\n  }\n  try {\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\n      if (options.strict) {\n        throw new Error(\"[destr] Possible prototype pollution\");\n      }\n      return JSON.parse(value, jsonParseTransform);\n    }\n    return JSON.parse(value);\n  } catch (error) {\n    if (options.strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction safeDestr(value, options = {}) {\n  return destr(value, { ...options, strict: true });\n}\n\nexport { destr as default, destr, safeDestr };\n","const n = /[^\\0-\\x7E]/;\nconst t = /[\\x2E\\u3002\\uFF0E\\uFF61]/g;\nconst o = {\n  overflow: \"Overflow Error\",\n  \"not-basic\": \"Illegal Input\",\n  \"invalid-input\": \"Invalid Input\"\n};\nconst e = Math.floor;\nconst r = String.fromCharCode;\nfunction s(n2) {\n  throw new RangeError(o[n2]);\n}\nconst c = function(n2, t2) {\n  return n2 + 22 + 75 * (n2 < 26) - ((t2 != 0) << 5);\n};\nconst u = function(n2, t2, o2) {\n  let r2 = 0;\n  for (n2 = o2 ? e(n2 / 700) : n2 >> 1, n2 += e(n2 / t2); n2 > 455; r2 += 36) {\n    n2 = e(n2 / 35);\n  }\n  return e(r2 + 36 * n2 / (n2 + 38));\n};\nfunction toASCII(o2) {\n  return function(n2, o3) {\n    const e2 = n2.split(\"@\");\n    let r2 = \"\";\n    e2.length > 1 && (r2 = e2[0] + \"@\", n2 = e2[1]);\n    const s2 = function(n3, t2) {\n      const o4 = [];\n      let e3 = n3.length;\n      for (; e3--; ) {\n        o4[e3] = t2(n3[e3]);\n      }\n      return o4;\n    }((n2 = n2.replace(t, \".\")).split(\".\"), o3).join(\".\");\n    return r2 + s2;\n  }(o2, function(t2) {\n    return n.test(t2) ? \"xn--\" + function(n2) {\n      const t3 = [];\n      const o3 = (n2 = function(n3) {\n        const t4 = [];\n        let o4 = 0;\n        const e2 = n3.length;\n        for (; o4 < e2; ) {\n          const r2 = n3.charCodeAt(o4++);\n          if (r2 >= 55296 && r2 <= 56319 && o4 < e2) {\n            const e3 = n3.charCodeAt(o4++);\n            (64512 & e3) == 56320 ? t4.push(((1023 & r2) << 10) + (1023 & e3) + 65536) : (t4.push(r2), o4--);\n          } else {\n            t4.push(r2);\n          }\n        }\n        return t4;\n      }(n2)).length;\n      let f = 128;\n      let i = 0;\n      let l = 72;\n      for (const o4 of n2) {\n        o4 < 128 && t3.push(r(o4));\n      }\n      const h = t3.length;\n      let p = h;\n      for (h && t3.push(\"-\"); p < o3; ) {\n        let o4 = 2147483647;\n        for (const t4 of n2) {\n          t4 >= f && t4 < o4 && (o4 = t4);\n        }\n        const a = p + 1;\n        o4 - f > e((2147483647 - i) / a) && s(\"overflow\"), i += (o4 - f) * a, f = o4;\n        for (const o5 of n2) {\n          if (o5 < f && ++i > 2147483647 && s(\"overflow\"), o5 == f) {\n            let n3 = i;\n            for (let o6 = 36; ; o6 += 36) {\n              const s2 = o6 <= l ? 1 : o6 >= l + 26 ? 26 : o6 - l;\n              if (n3 < s2) {\n                break;\n              }\n              const u2 = n3 - s2;\n              const f2 = 36 - s2;\n              t3.push(r(c(s2 + u2 % f2, 0))), n3 = e(u2 / f2);\n            }\n            t3.push(r(c(n3, 0))), l = u(i, a, p == h), i = 0, ++p;\n          }\n        }\n        ++i, ++f;\n      }\n      return t3.join(\"\");\n    }(t2) : t2;\n  });\n}\n\nconst HASH_RE = /#/g;\nconst AMPERSAND_RE = /&/g;\nconst SLASH_RE = /\\//g;\nconst EQUAL_RE = /=/g;\nconst IM_RE = /\\?/g;\nconst PLUS_RE = /\\+/g;\nconst ENC_CARET_RE = /%5e/gi;\nconst ENC_BACKTICK_RE = /%60/gi;\nconst ENC_CURLY_OPEN_RE = /%7b/gi;\nconst ENC_PIPE_RE = /%7c/gi;\nconst ENC_CURLY_CLOSE_RE = /%7d/gi;\nconst ENC_SPACE_RE = /%20/gi;\nconst ENC_SLASH_RE = /%2f/gi;\nconst ENC_ENC_SLASH_RE = /%252f/gi;\nfunction encode(text) {\n  return encodeURI(\"\" + text).replace(ENC_PIPE_RE, \"|\");\n}\nfunction encodeHash(text) {\n  return encode(text).replace(ENC_CURLY_OPEN_RE, \"{\").replace(ENC_CURLY_CLOSE_RE, \"}\").replace(ENC_CARET_RE, \"^\");\n}\nfunction encodeQueryValue(input) {\n  return encode(typeof input === \"string\" ? input : JSON.stringify(input)).replace(PLUS_RE, \"%2B\").replace(ENC_SPACE_RE, \"+\").replace(HASH_RE, \"%23\").replace(AMPERSAND_RE, \"%26\").replace(ENC_BACKTICK_RE, \"`\").replace(ENC_CARET_RE, \"^\").replace(SLASH_RE, \"%2F\");\n}\nfunction encodeQueryKey(text) {\n  return encodeQueryValue(text).replace(EQUAL_RE, \"%3D\");\n}\nfunction encodePath(text) {\n  return encode(text).replace(HASH_RE, \"%23\").replace(IM_RE, \"%3F\").replace(ENC_ENC_SLASH_RE, \"%2F\").replace(AMPERSAND_RE, \"%26\").replace(PLUS_RE, \"%2B\");\n}\nfunction encodeParam(text) {\n  return encodePath(text).replace(SLASH_RE, \"%2F\");\n}\nfunction decode(text = \"\") {\n  try {\n    return decodeURIComponent(\"\" + text);\n  } catch {\n    return \"\" + text;\n  }\n}\nfunction decodePath(text) {\n  return decode(text.replace(ENC_SLASH_RE, \"%252F\"));\n}\nfunction decodeQueryKey(text) {\n  return decode(text.replace(PLUS_RE, \" \"));\n}\nfunction decodeQueryValue(text) {\n  return decode(text.replace(PLUS_RE, \" \"));\n}\nfunction encodeHost(name = \"\") {\n  return toASCII(name);\n}\n\nfunction parseQuery(parametersString = \"\") {\n  const object = {};\n  if (parametersString[0] === \"?\") {\n    parametersString = parametersString.slice(1);\n  }\n  for (const parameter of parametersString.split(\"&\")) {\n    const s = parameter.match(/([^=]+)=?(.*)/) || [];\n    if (s.length < 2) {\n      continue;\n    }\n    const key = decodeQueryKey(s[1]);\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = decodeQueryValue(s[2] || \"\");\n    if (object[key] === void 0) {\n      object[key] = value;\n    } else if (Array.isArray(object[key])) {\n      object[key].push(value);\n    } else {\n      object[key] = [object[key], value];\n    }\n  }\n  return object;\n}\nfunction encodeQueryItem(key, value) {\n  if (typeof value === \"number\" || typeof value === \"boolean\") {\n    value = String(value);\n  }\n  if (!value) {\n    return encodeQueryKey(key);\n  }\n  if (Array.isArray(value)) {\n    return value.map((_value) => `${encodeQueryKey(key)}=${encodeQueryValue(_value)}`).join(\"&\");\n  }\n  return `${encodeQueryKey(key)}=${encodeQueryValue(value)}`;\n}\nfunction stringifyQuery(query) {\n  return Object.keys(query).filter((k) => query[k] !== void 0).map((k) => encodeQueryItem(k, query[k])).filter(Boolean).join(\"&\");\n}\n\nconst PROTOCOL_STRICT_REGEX = /^[\\s\\w\\0+.-]{2,}:([/\\\\]{1,2})/;\nconst PROTOCOL_REGEX = /^[\\s\\w\\0+.-]{2,}:([/\\\\]{2})?/;\nconst PROTOCOL_RELATIVE_REGEX = /^([/\\\\]\\s*){2,}[^/\\\\]/;\nconst PROTOCOL_SCRIPT_RE = /^[\\s\\0]*(blob|data|javascript|vbscript):$/i;\nconst TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\nconst JOIN_LEADING_SLASH_RE = /^\\.?\\//;\nfunction isRelative(inputString) {\n  return [\"./\", \"../\"].some((string_) => inputString.startsWith(string_));\n}\nfunction hasProtocol(inputString, opts = {}) {\n  if (typeof opts === \"boolean\") {\n    opts = { acceptRelative: opts };\n  }\n  if (opts.strict) {\n    return PROTOCOL_STRICT_REGEX.test(inputString);\n  }\n  return PROTOCOL_REGEX.test(inputString) || (opts.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(inputString) : false);\n}\nfunction isScriptProtocol(protocol) {\n  return !!protocol && PROTOCOL_SCRIPT_RE.test(protocol);\n}\nfunction hasTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\nfunction withoutTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split(\"?\");\n  const cleanPath = s0.endsWith(\"/\") ? s0.slice(0, -1) : s0;\n  return (cleanPath || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction withTrailingSlash(input = \"\", respectQueryAndFragment) {\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\nfunction hasLeadingSlash(input = \"\") {\n  return input.startsWith(\"/\");\n}\nfunction withoutLeadingSlash(input = \"\") {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\nfunction withLeadingSlash(input = \"\") {\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\nfunction cleanDoubleSlashes(input = \"\") {\n  return input.split(\"://\").map((string_) => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\nfunction withBase(input, base) {\n  if (isEmptyURL(base) || hasProtocol(input)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (input.startsWith(_base)) {\n    return input;\n  }\n  return joinURL(_base, input);\n}\nfunction withoutBase(input, base) {\n  if (isEmptyURL(base)) {\n    return input;\n  }\n  const _base = withoutTrailingSlash(base);\n  if (!input.startsWith(_base)) {\n    return input;\n  }\n  const trimmed = input.slice(_base.length);\n  return trimmed[0] === \"/\" ? trimmed : \"/\" + trimmed;\n}\nfunction withQuery(input, query) {\n  const parsed = parseURL(input);\n  const mergedQuery = { ...parseQuery(parsed.search), ...query };\n  parsed.search = stringifyQuery(mergedQuery);\n  return stringifyParsedURL(parsed);\n}\nfunction getQuery(input) {\n  return parseQuery(parseURL(input).search);\n}\nfunction isEmptyURL(url) {\n  return !url || url === \"/\";\n}\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\nfunction joinURL(base, ...input) {\n  let url = base || \"\";\n  for (const segment of input.filter((url2) => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n  return url;\n}\nfunction joinRelativeURL(..._input) {\n  const JOIN_SEGMENT_SPLIT_RE = /\\/(?!\\/)/;\n  const input = _input.filter(Boolean);\n  const segments = [];\n  let segmentsDepth = 0;\n  for (const i of input) {\n    if (!i || i === \"/\") {\n      continue;\n    }\n    for (const [sindex, s] of i.split(JOIN_SEGMENT_SPLIT_RE).entries()) {\n      if (!s || s === \".\") {\n        continue;\n      }\n      if (s === \"..\") {\n        if (segments.length === 1 && hasProtocol(segments[0])) {\n          continue;\n        }\n        segments.pop();\n        segmentsDepth--;\n        continue;\n      }\n      if (sindex === 1 && segments[segments.length - 1]?.endsWith(\":/\")) {\n        segments[segments.length - 1] += \"/\" + s;\n        continue;\n      }\n      segments.push(s);\n      segmentsDepth++;\n    }\n  }\n  let url = segments.join(\"/\");\n  if (segmentsDepth >= 0) {\n    if (input[0]?.startsWith(\"/\") && !url.startsWith(\"/\")) {\n      url = \"/\" + url;\n    } else if (input[0]?.startsWith(\"./\") && !url.startsWith(\"./\")) {\n      url = \"./\" + url;\n    }\n  } else {\n    url = \"../\".repeat(-1 * segmentsDepth) + url;\n  }\n  if (input[input.length - 1]?.endsWith(\"/\") && !url.endsWith(\"/\")) {\n    url += \"/\";\n  }\n  return url;\n}\nfunction withHttp(input) {\n  return withProtocol(input, \"http://\");\n}\nfunction withHttps(input) {\n  return withProtocol(input, \"https://\");\n}\nfunction withoutProtocol(input) {\n  return withProtocol(input, \"\");\n}\nfunction withProtocol(input, protocol) {\n  let match = input.match(PROTOCOL_REGEX);\n  if (!match) {\n    match = input.match(/^\\/{2,}/);\n  }\n  if (!match) {\n    return protocol + input;\n  }\n  return protocol + input.slice(match[0].length);\n}\nfunction normalizeURL(input) {\n  const parsed = parseURL(input);\n  parsed.pathname = encodePath(decodePath(parsed.pathname));\n  parsed.hash = encodeHash(decode(parsed.hash));\n  parsed.host = encodeHost(decode(parsed.host));\n  parsed.search = stringifyQuery(parseQuery(parsed.search));\n  return stringifyParsedURL(parsed);\n}\nfunction resolveURL(base = \"\", ...inputs) {\n  if (typeof base !== \"string\") {\n    throw new TypeError(\n      `URL input should be string received ${typeof base} (${base})`\n    );\n  }\n  const filteredInputs = inputs.filter((input) => isNonEmptyURL(input));\n  if (filteredInputs.length === 0) {\n    return base;\n  }\n  const url = parseURL(base);\n  for (const inputSegment of filteredInputs) {\n    const urlSegment = parseURL(inputSegment);\n    if (urlSegment.pathname) {\n      url.pathname = withTrailingSlash(url.pathname) + withoutLeadingSlash(urlSegment.pathname);\n    }\n    if (urlSegment.hash && urlSegment.hash !== \"#\") {\n      url.hash = urlSegment.hash;\n    }\n    if (urlSegment.search && urlSegment.search !== \"?\") {\n      if (url.search && url.search !== \"?\") {\n        const queryString = stringifyQuery({\n          ...parseQuery(url.search),\n          ...parseQuery(urlSegment.search)\n        });\n        url.search = queryString.length > 0 ? \"?\" + queryString : \"\";\n      } else {\n        url.search = urlSegment.search;\n      }\n    }\n  }\n  return stringifyParsedURL(url);\n}\nfunction isSamePath(p1, p2) {\n  return decode(withoutTrailingSlash(p1)) === decode(withoutTrailingSlash(p2));\n}\nfunction isEqual(a, b, options = {}) {\n  if (!options.trailingSlash) {\n    a = withTrailingSlash(a);\n    b = withTrailingSlash(b);\n  }\n  if (!options.leadingSlash) {\n    a = withLeadingSlash(a);\n    b = withLeadingSlash(b);\n  }\n  if (!options.encoding) {\n    a = decode(a);\n    b = decode(b);\n  }\n  return a === b;\n}\nfunction withFragment(input, hash) {\n  if (!hash || hash === \"#\") {\n    return input;\n  }\n  const parsed = parseURL(input);\n  parsed.hash = hash === \"\" ? \"\" : \"#\" + encodeHash(hash);\n  return stringifyParsedURL(parsed);\n}\nfunction withoutFragment(input) {\n  return stringifyParsedURL({ ...parseURL(input), hash: \"\" });\n}\nfunction withoutHost(input) {\n  const parsed = parseURL(input);\n  return (parsed.pathname || \"/\") + parsed.search + parsed.hash;\n}\n\nconst protocolRelative = Symbol.for(\"ufo:protocolRelative\");\nfunction parseURL(input = \"\", defaultProto) {\n  const _specialProtoMatch = input.match(\n    /^[\\s\\0]*(blob:|data:|javascript:|vbscript:)(.*)/i\n  );\n  if (_specialProtoMatch) {\n    const [, _proto, _pathname = \"\"] = _specialProtoMatch;\n    return {\n      protocol: _proto.toLowerCase(),\n      pathname: _pathname,\n      href: _proto + _pathname,\n      auth: \"\",\n      host: \"\",\n      search: \"\",\n      hash: \"\"\n    };\n  }\n  if (!hasProtocol(input, { acceptRelative: true })) {\n    return defaultProto ? parseURL(defaultProto + input) : parsePath(input);\n  }\n  const [, protocol = \"\", auth, hostAndPath = \"\"] = input.replace(/\\\\/g, \"/\").match(/^[\\s\\0]*([\\w+.-]{2,}:)?\\/\\/([^/@]+@)?(.*)/) || [];\n  let [, host = \"\", path = \"\"] = hostAndPath.match(/([^#/?]*)(.*)?/) || [];\n  if (protocol === \"file:\") {\n    path = path.replace(/\\/(?=[A-Za-z]:)/, \"\");\n  }\n  const { pathname, search, hash } = parsePath(path);\n  return {\n    protocol: protocol.toLowerCase(),\n    auth: auth ? auth.slice(0, Math.max(0, auth.length - 1)) : \"\",\n    host,\n    pathname,\n    search,\n    hash,\n    [protocolRelative]: !protocol\n  };\n}\nfunction parsePath(input = \"\") {\n  const [pathname = \"\", search = \"\", hash = \"\"] = (input.match(/([^#?]*)(\\?[^#]*)?(#.*)?/) || []).splice(1);\n  return {\n    pathname,\n    search,\n    hash\n  };\n}\nfunction parseAuth(input = \"\") {\n  const [username, password] = input.split(\":\");\n  return {\n    username: decode(username),\n    password: decode(password)\n  };\n}\nfunction parseHost(input = \"\") {\n  const [hostname, port] = (input.match(/([^/:]*):?(\\d+)?/) || []).splice(1);\n  return {\n    hostname: decode(hostname),\n    port\n  };\n}\nfunction stringifyParsedURL(parsed) {\n  const pathname = parsed.pathname || \"\";\n  const search = parsed.search ? (parsed.search.startsWith(\"?\") ? \"\" : \"?\") + parsed.search : \"\";\n  const hash = parsed.hash || \"\";\n  const auth = parsed.auth ? parsed.auth + \"@\" : \"\";\n  const host = parsed.host || \"\";\n  const proto = parsed.protocol || parsed[protocolRelative] ? (parsed.protocol || \"\") + \"//\" : \"\";\n  return proto + auth + host + pathname + search + hash;\n}\nconst FILENAME_STRICT_REGEX = /\\/([^/]+\\.[^/]+)$/;\nconst FILENAME_REGEX = /\\/([^/]+)$/;\nfunction parseFilename(input = \"\", { strict }) {\n  const { pathname } = parseURL(input);\n  const matches = strict ? pathname.match(FILENAME_STRICT_REGEX) : pathname.match(FILENAME_REGEX);\n  return matches ? matches[1] : void 0;\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass $URL {\n  constructor(input = \"\") {\n    __publicField(this, \"protocol\");\n    __publicField(this, \"host\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"pathname\");\n    __publicField(this, \"query\", {});\n    __publicField(this, \"hash\");\n    if (typeof input !== \"string\") {\n      throw new TypeError(\n        `URL input should be string received ${typeof input} (${input})`\n      );\n    }\n    const parsed = parseURL(input);\n    this.protocol = decode(parsed.protocol);\n    this.host = decode(parsed.host);\n    this.auth = decode(parsed.auth);\n    this.pathname = decodePath(parsed.pathname);\n    this.query = parseQuery(parsed.search);\n    this.hash = decode(parsed.hash);\n  }\n  get hostname() {\n    return parseHost(this.host).hostname;\n  }\n  get port() {\n    return parseHost(this.host).port || \"\";\n  }\n  get username() {\n    return parseAuth(this.auth).username;\n  }\n  get password() {\n    return parseAuth(this.auth).password || \"\";\n  }\n  get hasProtocol() {\n    return this.protocol.length;\n  }\n  get isAbsolute() {\n    return this.hasProtocol || this.pathname[0] === \"/\";\n  }\n  get search() {\n    const q = stringifyQuery(this.query);\n    return q.length > 0 ? \"?\" + q : \"\";\n  }\n  get searchParams() {\n    const p = new URLSearchParams();\n    for (const name in this.query) {\n      const value = this.query[name];\n      if (Array.isArray(value)) {\n        for (const v of value) {\n          p.append(name, v);\n        }\n      } else {\n        p.append(\n          name,\n          typeof value === \"string\" ? value : JSON.stringify(value)\n        );\n      }\n    }\n    return p;\n  }\n  get origin() {\n    return (this.protocol ? this.protocol + \"//\" : \"\") + encodeHost(this.host);\n  }\n  get fullpath() {\n    return encodePath(this.pathname) + this.search + encodeHash(this.hash);\n  }\n  get encodedAuth() {\n    if (!this.auth) {\n      return \"\";\n    }\n    const { username, password } = parseAuth(this.auth);\n    return encodeURIComponent(username) + (password ? \":\" + encodeURIComponent(password) : \"\");\n  }\n  get href() {\n    const auth = this.encodedAuth;\n    const originWithAuth = (this.protocol ? this.protocol + \"//\" : \"\") + (auth ? auth + \"@\" : \"\") + encodeHost(this.host);\n    return this.hasProtocol && this.isAbsolute ? originWithAuth + this.fullpath : this.fullpath;\n  }\n  append(url) {\n    if (url.hasProtocol) {\n      throw new Error(\"Cannot append a URL with protocol\");\n    }\n    Object.assign(this.query, url.query);\n    if (url.pathname) {\n      this.pathname = withTrailingSlash(this.pathname) + withoutLeadingSlash(url.pathname);\n    }\n    if (url.hash) {\n      this.hash = url.hash;\n    }\n  }\n  toJSON() {\n    return this.href;\n  }\n  toString() {\n    return this.href;\n  }\n}\nfunction createURL(input) {\n  return new $URL(input);\n}\n\nexport { $URL, cleanDoubleSlashes, createURL, decode, decodePath, decodeQueryKey, decodeQueryValue, encode, encodeHash, encodeHost, encodeParam, encodePath, encodeQueryItem, encodeQueryKey, encodeQueryValue, getQuery, hasLeadingSlash, hasProtocol, hasTrailingSlash, isEmptyURL, isEqual, isNonEmptyURL, isRelative, isSamePath, isScriptProtocol, joinRelativeURL, joinURL, normalizeURL, parseAuth, parseFilename, parseHost, parsePath, parseQuery, parseURL, resolveURL, stringifyParsedURL, stringifyQuery, withBase, withFragment, withHttp, withHttps, withLeadingSlash, withProtocol, withQuery, withTrailingSlash, withoutBase, withoutFragment, withoutHost, withoutLeadingSlash, withoutProtocol, withoutTrailingSlash };\n","import destr from 'destr';\nimport { withBase, withQuery } from 'ufo';\n\nclass FetchError extends Error {\n  constructor(message, opts) {\n    super(message, opts);\n    this.name = \"FetchError\";\n    if (opts?.cause && !this.cause) {\n      this.cause = opts.cause;\n    }\n  }\n}\nfunction createFetchError(ctx) {\n  const errorMessage = ctx.error?.message || ctx.error?.toString() || \"\";\n  const method = ctx.request?.method || ctx.options?.method || \"GET\";\n  const url = ctx.request?.url || String(ctx.request) || \"/\";\n  const requestStr = `[${method}] ${JSON.stringify(url)}`;\n  const statusStr = ctx.response ? `${ctx.response.status} ${ctx.response.statusText}` : \"<no response>\";\n  const message = `${requestStr}: ${statusStr}${errorMessage ? ` ${errorMessage}` : \"\"}`;\n  const fetchError = new FetchError(\n    message,\n    ctx.error ? { cause: ctx.error } : void 0\n  );\n  for (const key of [\"request\", \"options\", \"response\"]) {\n    Object.defineProperty(fetchError, key, {\n      get() {\n        return ctx[key];\n      }\n    });\n  }\n  for (const [key, refKey] of [\n    [\"data\", \"_data\"],\n    [\"status\", \"status\"],\n    [\"statusCode\", \"status\"],\n    [\"statusText\", \"statusText\"],\n    [\"statusMessage\", \"statusText\"]\n  ]) {\n    Object.defineProperty(fetchError, key, {\n      get() {\n        return ctx.response && ctx.response[refKey];\n      }\n    });\n  }\n  return fetchError;\n}\n\nconst payloadMethods = new Set(\n  Object.freeze([\"PATCH\", \"POST\", \"PUT\", \"DELETE\"])\n);\nfunction isPayloadMethod(method = \"GET\") {\n  return payloadMethods.has(method.toUpperCase());\n}\nfunction isJSONSerializable(value) {\n  if (value === void 0) {\n    return false;\n  }\n  const t = typeof value;\n  if (t === \"string\" || t === \"number\" || t === \"boolean\" || t === null) {\n    return true;\n  }\n  if (t !== \"object\") {\n    return false;\n  }\n  if (Array.isArray(value)) {\n    return true;\n  }\n  if (value.buffer) {\n    return false;\n  }\n  return value.constructor && value.constructor.name === \"Object\" || typeof value.toJSON === \"function\";\n}\nconst textTypes = /* @__PURE__ */ new Set([\n  \"image/svg\",\n  \"application/xml\",\n  \"application/xhtml\",\n  \"application/html\"\n]);\nconst JSON_RE = /^application\\/(?:[\\w!#$%&*.^`~-]*\\+)?json(;.+)?$/i;\nfunction detectResponseType(_contentType = \"\") {\n  if (!_contentType) {\n    return \"json\";\n  }\n  const contentType = _contentType.split(\";\").shift() || \"\";\n  if (JSON_RE.test(contentType)) {\n    return \"json\";\n  }\n  if (textTypes.has(contentType) || contentType.startsWith(\"text/\")) {\n    return \"text\";\n  }\n  return \"blob\";\n}\nfunction resolveFetchOptions(request, input, defaults, Headers) {\n  const headers = mergeHeaders(\n    input?.headers ?? request?.headers,\n    defaults?.headers,\n    Headers\n  );\n  let query;\n  if (defaults?.query || defaults?.params || input?.params || input?.query) {\n    query = {\n      ...defaults?.params,\n      ...defaults?.query,\n      ...input?.params,\n      ...input?.query\n    };\n  }\n  return {\n    ...defaults,\n    ...input,\n    query,\n    params: query,\n    headers\n  };\n}\nfunction mergeHeaders(input, defaults, Headers) {\n  if (!defaults) {\n    return new Headers(input);\n  }\n  const headers = new Headers(defaults);\n  if (input) {\n    for (const [key, value] of Symbol.iterator in input || Array.isArray(input) ? input : new Headers(input)) {\n      headers.set(key, value);\n    }\n  }\n  return headers;\n}\nasync function callHooks(context, hooks) {\n  if (hooks) {\n    if (Array.isArray(hooks)) {\n      for (const hook of hooks) {\n        await hook(context);\n      }\n    } else {\n      await hooks(context);\n    }\n  }\n}\n\nconst retryStatusCodes = /* @__PURE__ */ new Set([\n  408,\n  // Request Timeout\n  409,\n  // Conflict\n  425,\n  // Too Early (Experimental)\n  429,\n  // Too Many Requests\n  500,\n  // Internal Server Error\n  502,\n  // Bad Gateway\n  503,\n  // Service Unavailable\n  504\n  // Gateway Timeout\n]);\nconst nullBodyResponses = /* @__PURE__ */ new Set([101, 204, 205, 304]);\nfunction createFetch(globalOptions = {}) {\n  const {\n    fetch = globalThis.fetch,\n    Headers = globalThis.Headers,\n    AbortController = globalThis.AbortController\n  } = globalOptions;\n  async function onError(context) {\n    const isAbort = context.error && context.error.name === \"AbortError\" && !context.options.timeout || false;\n    if (context.options.retry !== false && !isAbort) {\n      let retries;\n      if (typeof context.options.retry === \"number\") {\n        retries = context.options.retry;\n      } else {\n        retries = isPayloadMethod(context.options.method) ? 0 : 1;\n      }\n      const responseCode = context.response && context.response.status || 500;\n      if (retries > 0 && (Array.isArray(context.options.retryStatusCodes) ? context.options.retryStatusCodes.includes(responseCode) : retryStatusCodes.has(responseCode))) {\n        const retryDelay = typeof context.options.retryDelay === \"function\" ? context.options.retryDelay(context) : context.options.retryDelay || 0;\n        if (retryDelay > 0) {\n          await new Promise((resolve) => setTimeout(resolve, retryDelay));\n        }\n        return $fetchRaw(context.request, {\n          ...context.options,\n          retry: retries - 1\n        });\n      }\n    }\n    const error = createFetchError(context);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(error, $fetchRaw);\n    }\n    throw error;\n  }\n  const $fetchRaw = async function $fetchRaw2(_request, _options = {}) {\n    const context = {\n      request: _request,\n      options: resolveFetchOptions(\n        _request,\n        _options,\n        globalOptions.defaults,\n        Headers\n      ),\n      response: void 0,\n      error: void 0\n    };\n    if (context.options.method) {\n      context.options.method = context.options.method.toUpperCase();\n    }\n    if (context.options.onRequest) {\n      await callHooks(context, context.options.onRequest);\n    }\n    if (typeof context.request === \"string\") {\n      if (context.options.baseURL) {\n        context.request = withBase(context.request, context.options.baseURL);\n      }\n      if (context.options.query) {\n        context.request = withQuery(context.request, context.options.query);\n        delete context.options.query;\n      }\n      if (\"query\" in context.options) {\n        delete context.options.query;\n      }\n      if (\"params\" in context.options) {\n        delete context.options.params;\n      }\n    }\n    if (context.options.body && isPayloadMethod(context.options.method)) {\n      if (isJSONSerializable(context.options.body)) {\n        context.options.body = typeof context.options.body === \"string\" ? context.options.body : JSON.stringify(context.options.body);\n        context.options.headers = new Headers(context.options.headers || {});\n        if (!context.options.headers.has(\"content-type\")) {\n          context.options.headers.set(\"content-type\", \"application/json\");\n        }\n        if (!context.options.headers.has(\"accept\")) {\n          context.options.headers.set(\"accept\", \"application/json\");\n        }\n      } else if (\n        // ReadableStream Body\n        \"pipeTo\" in context.options.body && typeof context.options.body.pipeTo === \"function\" || // Node.js Stream Body\n        typeof context.options.body.pipe === \"function\"\n      ) {\n        if (!(\"duplex\" in context.options)) {\n          context.options.duplex = \"half\";\n        }\n      }\n    }\n    let abortTimeout;\n    if (!context.options.signal && context.options.timeout) {\n      const controller = new AbortController();\n      abortTimeout = setTimeout(() => {\n        const error = new Error(\n          \"[TimeoutError]: The operation was aborted due to timeout\"\n        );\n        error.name = \"TimeoutError\";\n        error.code = 23;\n        controller.abort(error);\n      }, context.options.timeout);\n      context.options.signal = controller.signal;\n    }\n    try {\n      context.response = await fetch(\n        context.request,\n        context.options\n      );\n    } catch (error) {\n      context.error = error;\n      if (context.options.onRequestError) {\n        await callHooks(\n          context,\n          context.options.onRequestError\n        );\n      }\n      return await onError(context);\n    } finally {\n      if (abortTimeout) {\n        clearTimeout(abortTimeout);\n      }\n    }\n    const hasBody = (context.response.body || // https://github.com/unjs/ofetch/issues/324\n    // https://github.com/unjs/ofetch/issues/294\n    // https://github.com/JakeChampion/fetch/issues/1454\n    context.response._bodyInit) && !nullBodyResponses.has(context.response.status) && context.options.method !== \"HEAD\";\n    if (hasBody) {\n      const responseType = (context.options.parseResponse ? \"json\" : context.options.responseType) || detectResponseType(context.response.headers.get(\"content-type\") || \"\");\n      switch (responseType) {\n        case \"json\": {\n          const data = await context.response.text();\n          const parseFunction = context.options.parseResponse || destr;\n          context.response._data = parseFunction(data);\n          break;\n        }\n        case \"stream\": {\n          context.response._data = context.response.body || context.response._bodyInit;\n          break;\n        }\n        default: {\n          context.response._data = await context.response[responseType]();\n        }\n      }\n    }\n    if (context.options.onResponse) {\n      await callHooks(\n        context,\n        context.options.onResponse\n      );\n    }\n    if (!context.options.ignoreResponseError && context.response.status >= 400 && context.response.status < 600) {\n      if (context.options.onResponseError) {\n        await callHooks(\n          context,\n          context.options.onResponseError\n        );\n      }\n      return await onError(context);\n    }\n    return context.response;\n  };\n  const $fetch = async function $fetch2(request, options) {\n    const r = await $fetchRaw(request, options);\n    return r._data;\n  };\n  $fetch.raw = $fetchRaw;\n  $fetch.native = (...args) => fetch(...args);\n  $fetch.create = (defaultOptions = {}, customGlobalOptions = {}) => createFetch({\n    ...globalOptions,\n    ...customGlobalOptions,\n    defaults: {\n      ...globalOptions.defaults,\n      ...customGlobalOptions.defaults,\n      ...defaultOptions\n    }\n  });\n  return $fetch;\n}\n\nexport { FetchError as F, createFetchError as a, createFetch as c };\n","import { c as createFetch } from './shared/ofetch.03887fc3.mjs';\nexport { F as FetchError, a as createFetchError } from './shared/ofetch.03887fc3.mjs';\nimport 'destr';\nimport 'ufo';\n\nconst _globalThis = function() {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw new Error(\"unable to locate global object\");\n}();\nconst fetch = _globalThis.fetch ? (...args) => _globalThis.fetch(...args) : () => Promise.reject(new Error(\"[ofetch] global.fetch is not supported!\"));\nconst Headers = _globalThis.Headers;\nconst AbortController = _globalThis.AbortController;\nconst ofetch = createFetch({ fetch, Headers, AbortController });\nconst $fetch = ofetch;\n\nexport { $fetch, AbortController, Headers, createFetch, fetch, ofetch };\n","import { ofetch } from 'ofetch';\r\nimport Browser from 'webextension-polyfill';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\n\r\n// REMOVE: Old ConversationContext interface\r\n// ADD: New Bard-specific metadata interface\r\ninterface BardThreadMetadata {\r\n  contextIds: [string, string, string];\r\n  requestParams: {\r\n    atValue: string;\r\n    blValue: string;\r\n  };\r\n}\r\n\r\n\r\n// Helper functions\r\nfunction generateReqId() {\r\n  return Math.floor(Math.random() * 900000) + 100000;\r\n}\r\nfunction extractFromHTML(variableName: string, html: string) {\r\n  const regex = new RegExp(`\"${variableName}\":\"([^\"]+)\"`)\r\n  const match = regex.exec(html)\r\n  return match?.[1]\r\n}\r\n\r\nexport class BardModel extends AbstractModel {\r\n  constructor() {\r\n    super();\r\n    // Initialize storage and validate threads\r\n    this.initializeStorage().catch(console.error);\r\n  }\r\n\r\n  private async initializeStorage(): Promise<void> {\r\n    // Ensure threads storage exists\r\n    const threads = await this.loadThreadsFromStorage();\r\n    if (!threads.length) {\r\n      await this.saveThreadsToStorage([]);\r\n    }\r\n    await this.validateExistingThreads();\r\n  }\r\n\r\n  private async validateExistingThreads(): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    let hasChanges = false;\r\n\r\n    for (const thread of threads) {\r\n      if (thread.modelName === this.getName() && !this.isValidBardMetadata(thread.metadata)) {\r\n        await this.deleteThread(thread.id);\r\n        hasChanges = true;\r\n      }\r\n    }\r\n\r\n    if (hasChanges) {\r\n      await this.saveThreadsToStorage(threads.filter(t =>\r\n        t.modelName !== this.getName() || this.isValidBardMetadata(t.metadata)\r\n      ));\r\n    }\r\n  }\r\n\r\n  private isValidBardMetadata(metadata: any): metadata is BardThreadMetadata {\r\n    return metadata?.contextIds && metadata?.requestParams;\r\n  }\r\n\r\n\r\n  getName(): string {\r\n    return 'Google Bard';\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return true;\r\n  }\r\n\r\n \r\n  private async fetchRequestParams(): Promise<{ atValue: string; blValue: string }> {\r\n    try {\r\n      const response = await ofetch('https://gemini.google.com/', {\r\n        responseType: 'text'\r\n      });\r\n\r\n      const atValue = extractFromHTML('SNlM0e', response);\r\n      const blValue = extractFromHTML('cfb2h', response);\r\n\r\n      if (!atValue || !blValue) {\r\n        throw new AIModelError('Failed to extract Bard parameters', ErrorCode.UNAUTHORIZED);\r\n      }\r\n\r\n      return { atValue, blValue };\r\n    } catch (error) {\r\n      throw new AIModelError(\r\n        'Failed to initialize Bard session',\r\n        ErrorCode.UNAUTHORIZED\r\n      );\r\n    }\r\n  }\r\n\r\n  // KEEP: Response parsing with image support\r\n  private parseBardResponse(responseText: string): { text: string; ids: [string, string, string] } {\r\n    try {\r\n      const lines = responseText.split('\\n');\r\n      const jsonPart = lines.find(line => line.startsWith('['));\r\n      \r\n      if (!jsonPart) {\r\n        throw new Error('Invalid response format');\r\n      }\r\n\r\n      const data = JSON.parse(jsonPart);\r\n      const payload = JSON.parse(data[0][2]);\r\n\r\n      if (!payload) {\r\n        throw new Error('Empty response data');\r\n      }\r\n\r\n      const text = payload[4][0][1][0];\r\n      const ids: [string, string, string] = [\r\n        payload[1][0], // conversationId\r\n        payload[1][1], // responseId\r\n        payload[4][0][0], // choiceId\r\n      ];\r\n\r\n      const images = payload[4][0][4] || [];\r\n      let processedText = text;\r\n      \r\n      for (const image of images) {\r\n        const [media, source, placeholder] = image;\r\n        processedText = processedText.replace(placeholder, `[![${media[4]}](${media[0][0]})](${source[0][0]})`);\r\n      }\r\n\r\n      return { text: processedText, ids };\r\n    } catch (error) {\r\n      console.error('Error parsing Bard response:', error);\r\n      throw new AIModelError('Failed to parse Bard response', ErrorCode.UNKNOWN_ERROR);\r\n    }\r\n  }\r\n\r\n  // KEEP: Image upload functionality\r\n  private async uploadImage(image: File): Promise<string> {\r\n    const headers = {\r\n      'content-type': 'application/x-www-form-urlencoded;charset=UTF-8',\r\n      'push-id': 'feeds/mcudyrk2a4khkz',\r\n      'x-goog-upload-header-content-length': image.size.toString(),\r\n      'x-goog-upload-protocol': 'resumable',\r\n      'x-tenant-id': 'bard-storage',\r\n    };\r\n\r\n    const resp = await ofetch.raw('https://content-push.googleapis.com/upload/', {\r\n      method: 'POST',\r\n      headers: {\r\n        ...headers,\r\n        'x-goog-upload-command': 'start',\r\n      },\r\n      body: new URLSearchParams({ [`File name: ${image.name}`]: '' }),\r\n    });\r\n\r\n    const uploadUrl = resp.headers.get('x-goog-upload-url');\r\n    if (!uploadUrl) {\r\n      throw new AIModelError('Failed to upload image', ErrorCode.UNKNOWN_ERROR);\r\n    }\r\n\r\n    const uploadResult = await ofetch(uploadUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        ...headers,\r\n        'x-goog-upload-command': 'upload, finalize',\r\n        'x-goog-upload-offset': '0',\r\n      },\r\n      body: image,\r\n    });\r\n\r\n    return uploadResult as string;\r\n  }\r\n\r\n  // UPDATE: Main message handling method to use thread system\r\n  // Add this method to properly retrieve the thread from storage before each request\r\n  private async ensureThreadLoaded(): Promise<void> {\r\n    if (!this.currentThread) {\r\n      // Try to load the most recent thread for this model\r\n      const threads = await this.loadThreadsFromStorage();\r\n      const bardThreads = threads.filter(t => \r\n        t.modelName === this.getName() && this.isValidBardMetadata(t.metadata)\r\n      );\r\n      \r\n      if (bardThreads.length > 0) {\r\n        // Sort by most recent and use that thread\r\n        const mostRecentThread = bardThreads.sort((a, b) => b.updatedAt - a.updatedAt)[0];\r\n        this.currentThread = mostRecentThread;\r\n        console.log('Loaded existing thread from storage:', this.currentThread.id);\r\n      } else {\r\n        // Create a new thread if none exists\r\n        await this.initNewThread();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update doSendMessage to use the ensureThreadLoaded method\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    try {\r\n      params.onEvent({\r\n        type: 'UPDATE_ANSWER',\r\n        data: { text: '' }\r\n      });\r\n\r\n      // Make sure we have a valid thread with the latest data from storage\r\n      await this.ensureThreadLoaded();\r\n\r\n      // Now we can safely assert that currentThread exists\r\n      const currentThread = this.getCurrentThreadSafe();\r\n\r\n      // Add user message\r\n      const userMessage = this.createMessage('user', params.prompt);\r\n      currentThread.messages.push(userMessage);\r\n\r\n      // Get Bard-specific metadata\r\n      const metadata = this.getBardMetadata();\r\n      \r\n      // IMPORTANT: Log the context IDs to verify they're being retrieved correctly\r\n      console.log('Current context IDs before request:', metadata.contextIds);\r\n      \r\n      // Handle image upload\r\n      let imageUrl: string | undefined;\r\n      if (params.image) {\r\n        imageUrl = await this.uploadImage(params.image);\r\n      }\r\n\r\n      const payload = [\r\n        null,\r\n        JSON.stringify([\r\n          [params.prompt, 0, null, imageUrl ? [[[imageUrl, 1], params.image!.name]] : []],\r\n          null,\r\n          metadata.contextIds,\r\n        ]),\r\n      ];\r\n\r\n      const resp = await ofetch(\r\n        'https://gemini.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate',\r\n        {\r\n          method: 'POST',\r\n          signal: params.signal,\r\n          query: {\r\n            bl: metadata.requestParams.blValue,\r\n            _reqid: generateReqId(),\r\n            rt: 'c',\r\n          },\r\n          body: new URLSearchParams({\r\n            at: metadata.requestParams.atValue,\r\n            'f.req': JSON.stringify(payload),\r\n          }),\r\n          parseResponse: (txt) => txt,\r\n        },\r\n      );\r\n\r\n      const { text, ids } = this.parseBardResponse(resp);\r\n      \r\n      // Log the new context IDs\r\n      console.log('New context IDs after response:', ids);\r\n      \r\n      // Update thread with assistant's response\r\n      const assistantMessage = this.createMessage('assistant', text);\r\n      assistantMessage.metadata = { messageId: ids[0] };\r\n      currentThread.messages.push(assistantMessage);\r\n      \r\n      // Update thread metadata with new context IDs\r\n      if (currentThread.metadata) {\r\n        (currentThread.metadata as BardThreadMetadata).contextIds = ids;\r\n      }\r\n      currentThread.updatedAt = Date.now();\r\n      \r\n      // Save thread to storage - FIXED: Only save once using the proper method\r\n      await this.saveThread();\r\n      \r\n      // REMOVED: The duplicate thread saving code that was causing duplicates\r\n      // No longer loading all threads and saving again\r\n\r\n      // Send events\r\n      params.onEvent({\r\n        type: 'UPDATE_ANSWER',\r\n        data: { \r\n          text,\r\n          messageId: ids[0],\r\n          conversationId: ids[1],\r\n          messages: currentThread.messages\r\n        }\r\n      });\r\n\r\n      params.onEvent({ type: 'DONE' });\r\n    } catch (error) {\r\n      params.onEvent({\r\n        type: 'ERROR',\r\n        data: {\r\n          error: error instanceof AIModelError ? error : new AIModelError(\r\n            error instanceof Error ? error.message : String(error),\r\n            ErrorCode.NETWORK_ERROR\r\n          )\r\n        }\r\n      });\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // OVERRIDE: Thread loading to handle Bard session refresh\r\n  async loadThread(threadId: string): Promise<void> {\r\n    const threads = await this.loadThreadsFromStorage();\r\n    const thread = threads.find(t => t.id === threadId);\r\n    \r\n    if (thread && thread.modelName === this.getName()) {\r\n      this.currentThread = thread;\r\n      // Refresh Bard session\r\n      const metadata = this.currentThread.metadata as BardThreadMetadata;\r\n      metadata.requestParams = await this.fetchRequestParams();\r\n      await this.saveThread();\r\n      await this.saveThreadsToStorage(threads);\r\n    }\r\n  }\r\n\r\n  private getBardMetadata(): BardThreadMetadata {\r\n    const currentThread = this.getCurrentThreadSafe();\r\n    \r\n    if (!currentThread.metadata) {\r\n      throw new AIModelError('No thread metadata available', ErrorCode.INVALID_REQUEST);\r\n    }\r\n    \r\n    const metadata = currentThread.metadata as BardThreadMetadata;\r\n    if (!metadata.contextIds || !metadata.requestParams) {\r\n      throw new AIModelError('Invalid thread metadata', ErrorCode.INVALID_REQUEST);\r\n    }\r\n    \r\n    return metadata;\r\n  }\r\n\r\n  private getCurrentThreadSafe(): NonNullable<typeof this.currentThread> {\r\n    if (!this.currentThread) {\r\n      throw new AIModelError('No active thread', ErrorCode.INVALID_REQUEST);\r\n    }\r\n    return this.currentThread;\r\n  }\r\n\r\n\r\n  async initNewThread(): Promise<void> {\r\n    this.currentThread = {\r\n      id: uuid(),\r\n      title: 'New Conversation',\r\n      messages: [],\r\n      createdAt: Date.now(),\r\n      updatedAt: Date.now(),\r\n      modelName: this.getName(),\r\n      metadata: {\r\n        contextIds: ['', '', ''],\r\n        requestParams: await this.fetchRequestParams()\r\n      }\r\n    };\r\n    \r\n    // FIXED: Only save once using the proper method\r\n    await this.saveThread();\r\n    // REMOVED: The duplicate thread saving code\r\n  }\r\n\r\n  // Add a new method to properly save the thread\r\n  // Changed from protected to public to match parent class\r\n  public async saveThread(): Promise<void> {\r\n    if (!this.currentThread) return;\r\n    \r\n    // Load all threads\r\n    const threads = await this.loadThreadsFromStorage();\r\n    \r\n    // Find if this thread already exists\r\n    const existingIndex = threads.findIndex(t => t.id === this.currentThread!.id);\r\n    \r\n    if (existingIndex !== -1) {\r\n      // Update existing thread\r\n      threads[existingIndex] = this.currentThread;\r\n    } else {\r\n      // Add new thread\r\n      threads.push(this.currentThread);\r\n    }\r\n    \r\n    // Save all threads\r\n    await this.saveThreadsToStorage(threads);\r\n  }\r\n}","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshhold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    // Threshold is unspecified.\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    // Content with NEGLIGIBLE will be allowed.\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    // Content with NEGLIGIBLE and LOW will be allowed.\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    // Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed.\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    // All content will be allowed.\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    // Probability is unspecified.\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    // Content has a negligible chance of being unsafe.\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    // Content has a low chance of being unsafe.\n    HarmProbability[\"LOW\"] = \"LOW\";\n    // Content has a medium chance of being unsafe.\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    // Content has a high chance of being unsafe.\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst API_VERSION = \"v1\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.1.3\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n    }\n    toString() {\n        let url = `${BASE_URL}/${API_VERSION}/models/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders() {\n    return `${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`;\n}\nasync function makeRequest(url, body) {\n    let response;\n    try {\n        response = await fetch(url.toString(), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-goog-api-client\": getClientHeaders(),\n                \"x-goog-api-key\": url.apiKey,\n            },\n            body,\n        });\n        if (!response.ok) {\n            let message = \"\";\n            try {\n                const json = await response.json();\n                message = json.error.message;\n                if (json.error.details) {\n                    message += ` ${JSON.stringify(json.error.details)}`;\n                }\n            }\n            catch (e) {\n                // ignored\n            }\n            throw new Error(`[${response.status} ${response.statusText}] ${message}`);\n        }\n    }\n    catch (e) {\n        const err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n        throw err;\n    }\n    return response;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    return response;\n}\n/**\n * Returns text of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    if ((_d = (_c = (_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.text) {\n        return response.candidates[0].content.parts[0].text;\n    }\n    else {\n        return \"\";\n    }\n}\nconst badFinishReasons = [FinishReason.RECITATION, FinishReason.SAFETY];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader.read().then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            for (const candidate of response.candidates) {\n                const i = candidate.index;\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[i]) {\n                    aggregatedResponse.candidates[i] = {\n                        index: candidate.index,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[i].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[i].finishReason = candidate.finishReason;\n                aggregatedResponse.candidates[i].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[i].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[i].content) {\n                        aggregatedResponse.candidates[i].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [{ text: \"\" }],\n                        };\n                    }\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            aggregatedResponse.candidates[i].content.parts[0].text +=\n                                part.text;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true);\n    const response = await makeRequest(url, JSON.stringify(params));\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false);\n    const response = await makeRequest(url, JSON.stringify(params));\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatNewContent(request, role) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return { role, parts: newParts };\n}\nfunction formatGenerateContentInput(params) {\n    if (params.contents) {\n        return params;\n    }\n    else {\n        const content = formatNewContent(params, \"user\");\n        return { contents: [content] };\n    }\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params, \"user\");\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params) {\n        this.model = model;\n        this.params = params;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            this._history = params.history.map((content) => {\n                if (!content.role) {\n                    throw new Error(\"Missing role for history item: \" + JSON.stringify(content));\n                }\n                return formatNewContent(content.parts, content.role);\n            });\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}\n     */\n    async sendMessage(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest))\n            .then((result) => {\n            var _a;\n            if (result.response.candidates &&\n                result.response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     */\n    async sendMessageStream(request) {\n        var _a, _b;\n        await this._sendPromise;\n        const newContent = formatNewContent(request, \"user\");\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            contents: [...this._history, newContent],\n        };\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (response.candidates && response.candidates.length > 0) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.COUNT_TOKENS, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(Object.assign(Object.assign({}, params), { model })));\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.EMBED_CONTENT, apiKey, false);\n    const response = await makeRequest(url, JSON.stringify(params));\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params) {\n    const url = new RequestUrl(model, Task.BATCH_EMBED_CONTENTS, apiKey, false);\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model: `models/${model}` });\n    });\n    const response = await makeRequest(url, JSON.stringify({ requests: requestsWithModel }));\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams) {\n        var _a;\n        this.apiKey = apiKey;\n        if (modelParams.model.startsWith(\"models/\")) {\n            this.model = (_a = modelParams.model.split(\"models/\")) === null || _a === void 0 ? void 0 : _a[1];\n        }\n        else {\n            this.model = modelParams.model;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     */\n    async generateContent(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams));\n    }\n    /**\n     * Makes a single streaming call to the model\n     * and returns an object containing an iterable stream that iterates\n     * over all chunks in the streaming response as well as\n     * a promise that returns the final aggregated response.\n     */\n    async generateContentStream(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings }, formattedParams));\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        return new ChatSession(this.apiKey, this.model, startChatParams);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     */\n    async countTokens(request) {\n        const formattedParams = formatGenerateContentInput(request);\n        return countTokens(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds the provided content.\n     */\n    async embedContent(request) {\n        const formattedParams = formatEmbedContentInput(request);\n        return embedContent(this.apiKey, this.model, formattedParams);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     */\n    async batchEmbedContents(batchEmbedContentRequest) {\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest);\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams);\n    }\n}\n\nexport { BlockReason, ChatSession, FinishReason, GenerativeModel, GoogleGenerativeAI, HarmBlockThreshold, HarmCategory, HarmProbability, TaskType };\n//# sourceMappingURL=index.mjs.map\n","import { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\nimport { streamAsyncIterable } from '../utils/stream-async-iterable';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\ninterface Message {\r\n  id: string;\r\n  createdAt: number;\r\n  data: string;\r\n  from: 0 | 1; // human | bot\r\n}\r\n\r\ninterface ConversationContext {\r\n  conversationId: string;\r\n  historyMessages: Message[];\r\n  userId: number;\r\n  lastMessageId?: string;\r\n}\r\n\r\nexport class BaichuanWebModel extends AbstractModel {\r\n  private conversationContext?: ConversationContext;\r\n\r\n  getName(): string {\r\n    return '百川大模型';\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return false;\r\n  }\r\n\r\n  resetConversation(): void {\r\n    this.conversationContext = undefined;\r\n  }\r\n\r\n  private generateSessionId(): string {\r\n    return uuid().replace(/-/g, '');\r\n  }\r\n\r\n  private generateMessageId(): string {\r\n    return uuid().replace(/-/g, '');\r\n  }\r\n\r\n  private async getUserInfo(): Promise<{ id: number }> {\r\n    try {\r\n      const response = await fetch('https://www.baichuan-ai.com/api/user/info', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new AIModelError('Failed to get user info', ErrorCode.UNAUTHORIZED);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return { id: data.data.id || Math.floor(Math.random() * 1000000) };\r\n    } catch (error) {\r\n      // If we can't get the user info, generate a random ID\r\n      return { id: Math.floor(Math.random() * 1000000) };\r\n    }\r\n  }\r\n\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    try {\r\n      if (!this.conversationContext) {\r\n        const conversationId = this.generateSessionId();\r\n        const userInfo = await this.getUserInfo();\r\n        this.conversationContext = { conversationId, historyMessages: [], userId: userInfo.id };\r\n      }\r\n\r\n      const { conversationId, lastMessageId, historyMessages, userId } = this.conversationContext;\r\n\r\n      const message: Message = {\r\n        id: this.generateMessageId(),\r\n        createdAt: Date.now(),\r\n        data: params.prompt,\r\n        from: 0,\r\n      };\r\n\r\n      const resp = await fetch('https://www.baichuan-ai.com/api/chat/v1/chat', {\r\n        method: 'POST',\r\n        signal: params.signal,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          assistant: {},\r\n          assistant_info: {},\r\n          retry: 3,\r\n          type: \"input\",\r\n          stream: true,\r\n          request_id: uuid(),\r\n          app_info: { id: 10001, name: 'baichuan_web' },\r\n          user_info: { id: userId, status: 1 },\r\n          prompt: {\r\n            id: message.id,\r\n            data: message.data,\r\n            from: message.from,\r\n            parent_id: lastMessageId || 0,\r\n            created_at: message.createdAt,\r\n            attachments: []\r\n          },\r\n          session_info: { id: conversationId, name: '新的对话', created_at: Date.now() },\r\n          parameters: {\r\n            repetition_penalty: -1,\r\n            temperature: -1,\r\n            top_k: -1,\r\n            top_p: -1,\r\n            max_new_tokens: -1,\r\n            do_sample: -1,\r\n            regenerate: 0,\r\n            wse: true\r\n          },\r\n          history: historyMessages,\r\n        }),\r\n      });\r\n\r\n      if (!resp.ok) {\r\n        throw new AIModelError(`HTTP error ${resp.status}`, ErrorCode.SERVICE_UNAVAILABLE);\r\n      }\r\n\r\n      const decoder = new TextDecoder();\r\n      let result = '';\r\n      let answerMessageId: string | undefined;\r\n\r\n      for await (const uint8Array of streamAsyncIterable(resp.body!)) {\r\n        const str = decoder.decode(uint8Array);\r\n        const lines = str.split('\\n');\r\n        for (const line of lines) {\r\n          if (!line) {\r\n            continue;\r\n          }\r\n          try {\r\n            const data = JSON.parse(line);\r\n            if (!data.answer) {\r\n              continue;\r\n            }\r\n            answerMessageId = data.answer.id;\r\n            const text = data.answer.data;\r\n            if (text) {\r\n              result += text;\r\n              params.onEvent({ type: 'UPDATE_ANSWER', data: { text: result } });\r\n            }\r\n          } catch (error) {\r\n            console.error('Error parsing Baichuan stream:', error);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.conversationContext.historyMessages.push(message);\r\n      if (answerMessageId) {\r\n        this.conversationContext.lastMessageId = answerMessageId;\r\n        if (result) {\r\n          this.conversationContext.historyMessages.push({\r\n            id: answerMessageId,\r\n            data: result,\r\n            createdAt: Date.now(),\r\n            from: 1,\r\n          });\r\n        }\r\n      }\r\n\r\n      params.onEvent({ type: 'DONE' });\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      \r\n      if (error instanceof DOMException && error.name === 'AbortError') {\r\n        return; // Request was aborted, no need to throw\r\n      }\r\n      \r\n      throw new AIModelError(\r\n        error instanceof Error ? error.message : String(error),\r\n        ErrorCode.NETWORK_ERROR\r\n      );\r\n    }\r\n  }\r\n  // Add this method to implement the abstract requirement\r\n  async initNewThread(): Promise<void> {\r\n    this.conversationContext = undefined;\r\n  }\r\n}","import { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\nimport { parseSSEResponse } from '../utils/sse';\r\nimport { file2base64 } from '../utils/file';\r\n\r\ninterface ChatMessage {\r\n  role: 'system' | 'assistant' | 'user';\r\n  content: string | Array<{ type: string; text?: string; image_url?: { url: string; detail: string } }>;\r\n}\r\n\r\ninterface ConversationContext {\r\n  messages: ChatMessage[];\r\n}\r\n\r\nconst DEFAULT_SYSTEM_MESSAGE = \r\n  \"You are ChatGPT, a large language model trained by OpenAI. \" +\r\n  \"Answer as concisely as possible. \" +\r\n  \"Current date: {current_date}\";\r\n\r\nconst CONTEXT_SIZE = 9;\r\n\r\nexport interface ChatGPTApiConfig {\r\n  apiKey: string;\r\n  model?: string;\r\n  systemMessage?: string;\r\n}\r\n\r\nexport class ChatGPTApiModel extends AbstractModel {\r\n  private conversationContext?: ConversationContext;\r\n  private readonly apiKey: string;\r\n  private readonly model: string;\r\n  private readonly systemMessage: string;\r\n\r\n  constructor(config: ChatGPTApiConfig) {\r\n    super();\r\n    this.apiKey = config.apiKey;\r\n    this.model = config.model || 'gpt-3.5-turbo';\r\n    this.systemMessage = config.systemMessage || DEFAULT_SYSTEM_MESSAGE;\r\n  }\r\n\r\n  getName(): string {\r\n    return `ChatGPT API (${this.model})`;\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return this.model.includes('gpt-4') && this.model.includes('vision');\r\n  }\r\n\r\n  resetConversation(): void {\r\n    this.conversationContext = undefined;\r\n  }\r\n\r\n  private buildUserMessage(prompt: string, imageUrl?: string): ChatMessage {\r\n    if (!imageUrl) {\r\n      return { role: 'user', content: prompt };\r\n    }\r\n    return {\r\n      role: 'user',\r\n      content: [\r\n        { type: 'text', text: prompt },\r\n        { type: 'image_url', image_url: { url: imageUrl, detail: 'low' } },\r\n      ],\r\n    };\r\n  }\r\n\r\n  private buildMessages(prompt: string, imageUrl?: string): ChatMessage[] {\r\n    const currentDate = new Date().toISOString().split('T')[0];\r\n    const systemMessage = this.systemMessage.replace('{current_date}', currentDate);\r\n    return [\r\n      { role: 'system', content: systemMessage },\r\n      ...this.conversationContext!.messages.slice(-(CONTEXT_SIZE + 1)),\r\n      this.buildUserMessage(prompt, imageUrl),\r\n    ];\r\n  }\r\n\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    if (!this.apiKey) {\r\n      throw new AIModelError('ChatGPT API key is required', ErrorCode.MISSING_API_KEY);\r\n    }\r\n\r\n    if (!this.conversationContext) {\r\n      this.conversationContext = { messages: [] };\r\n    }\r\n\r\n    let imageUrl: string | undefined;\r\n    if (params.image) {\r\n      if (!this.supportsImageInput()) {\r\n        throw new AIModelError(\r\n          `The model ${this.model} does not support image input`,\r\n          ErrorCode.UNKNOWN_ERROR\r\n        );\r\n      }\r\n      imageUrl = await file2base64(params.image, true);\r\n    }\r\n\r\n    const messages = this.buildMessages(params.prompt, imageUrl);\r\n\r\n    try {\r\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.apiKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          model: this.model,\r\n          messages,\r\n          stream: true,\r\n        }),\r\n        signal: params.signal,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json().catch(() => ({}));\r\n        throw new AIModelError(\r\n          error.error?.message || `HTTP error ${response.status}`,\r\n          response.status === 401 ? ErrorCode.UNAUTHORIZED : ErrorCode.SERVICE_UNAVAILABLE\r\n        );\r\n      }\r\n\r\n      // Add user message to context only after fetch success\r\n      this.conversationContext.messages.push(this.buildUserMessage(params.prompt, imageUrl));\r\n\r\n      let done = false;\r\n      const result: ChatMessage = { role: 'assistant', content: '' };\r\n\r\n      const finish = () => {\r\n        done = true;\r\n        params.onEvent({ type: 'DONE' });\r\n        const messages = this.conversationContext!.messages;\r\n        messages.push(result);\r\n      };\r\n\r\n      await parseSSEResponse(response, (message) => {\r\n        if (message === '[DONE]') {\r\n          finish();\r\n          return;\r\n        }\r\n        \r\n        let data;\r\n        try {\r\n          data = JSON.parse(message);\r\n        } catch (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n        \r\n        if (data?.choices?.length) {\r\n          const delta = data.choices[0].delta;\r\n          if (delta?.content) {\r\n            if (typeof result.content === 'string') {\r\n              result.content += delta.content;\r\n              params.onEvent({\r\n                type: 'UPDATE_ANSWER',\r\n                data: { text: result.content },\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      if (!done) {\r\n        finish();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      \r\n      if (error instanceof DOMException && error.name === 'AbortError') {\r\n        return; // Request was aborted, no need to throw\r\n      }\r\n      \r\n      throw new AIModelError(\r\n        error instanceof Error ? error.message : String(error),\r\n        ErrorCode.NETWORK_ERROR\r\n      );\r\n    }\r\n  }\r\n\r\n  async initNewThread(): Promise<void> {\r\n      // Temporary implementation\r\n      this.resetConversation();\r\n    }\r\n}","import { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\nimport { parseSSEResponse } from '../utils/sse';\r\n\r\ninterface ConversationContext {\r\n  conversationId: string;\r\n}\r\n\r\nexport interface ClaudeWebModelConfig {\r\n  sessionKey: string;\r\n}\r\n\r\nexport class ClaudeWebModel extends AbstractModel {\r\n  private organizationId?: string;\r\n  private conversationContext?: ConversationContext;\r\n  private model: string;\r\n  private readonly sessionKey: string;\r\n\r\n  constructor(config: ClaudeWebModelConfig) {\r\n    super();\r\n    this.sessionKey = config.sessionKey;\r\n    this.model = 'claude-2.1';\r\n  }\r\n\r\n  getName(): string {\r\n    return 'Claude (webapp/claude-2)';\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return false;\r\n  }\r\n\r\n  resetConversation(): void {\r\n    this.conversationContext = undefined;\r\n  }\r\n\r\n  private async fetchOrganizationId(): Promise<string> {\r\n    try {\r\n      const response = await fetch('https://claude.ai/api/organizations', {\r\n        headers: {\r\n          Cookie: `sessionKey=${this.sessionKey}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new AIModelError('Failed to fetch organization ID', ErrorCode.UNAUTHORIZED);\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (!data || !data.length) {\r\n        throw new AIModelError('No organizations found', ErrorCode.UNAUTHORIZED);\r\n      }\r\n\r\n      return data[0].uuid;\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      throw new AIModelError('Failed to fetch organization ID', ErrorCode.NETWORK_ERROR);\r\n    }\r\n  }\r\n\r\n  private async createConversation(organizationId: string): Promise<string> {\r\n    try {\r\n      const response = await fetch('https://claude.ai/api/organizations/' + organizationId + '/chat_conversations', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Cookie: `sessionKey=${this.sessionKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          name: '',\r\n          uuid: crypto.randomUUID(),\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new AIModelError('Failed to create conversation', ErrorCode.SERVICE_UNAVAILABLE);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.uuid;\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      throw new AIModelError('Failed to create conversation', ErrorCode.NETWORK_ERROR);\r\n    }\r\n  }\r\n\r\n  private async generateChatTitle(organizationId: string, conversationId: string, prompt: string): Promise<void> {\r\n    try {\r\n      await fetch('https://claude.ai/api/generate_chat_title', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Cookie: `sessionKey=${this.sessionKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          organization_uuid: organizationId,\r\n          conversation_uuid: conversationId,\r\n          message_content: prompt,\r\n          recent_titles: [],\r\n        }),\r\n      });\r\n    } catch (error) {\r\n      // Ignore errors when generating chat title\r\n      console.error('Failed to generate chat title:', error);\r\n    }\r\n  }\r\n\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    try {\r\n      if (!this.organizationId) {\r\n        this.organizationId = await this.fetchOrganizationId();\r\n      }\r\n\r\n      if (!this.conversationContext) {\r\n        const conversationId = await this.createConversation(this.organizationId);\r\n        this.conversationContext = { conversationId };\r\n        this.generateChatTitle(this.organizationId, conversationId, params.prompt).catch(console.error);\r\n      }\r\n\r\n      const resp = await fetch('https://claude.ai/api/append_message', {\r\n        method: 'POST',\r\n        signal: params.signal,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Cookie: `sessionKey=${this.sessionKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          organization_uuid: this.organizationId,\r\n          conversation_uuid: this.conversationContext.conversationId,\r\n          text: params.prompt,\r\n          completion: {\r\n            prompt: params.prompt,\r\n            model: this.model,\r\n          },\r\n          attachments: [],\r\n        }),\r\n      });\r\n\r\n      // Different models are available for different accounts\r\n      if (!resp.ok && resp.status === 403 && this.model === 'claude-2.1') {\r\n        const text = await resp.text();\r\n        if (text.includes('model_not_allowed')) {\r\n          this.model = 'claude-2.0';\r\n          return this.doSendMessage(params);\r\n        }\r\n      }\r\n\r\n      if (!resp.ok) {\r\n        throw new AIModelError(`HTTP error ${resp.status}`, ErrorCode.SERVICE_UNAVAILABLE);\r\n      }\r\n\r\n      let result = '';\r\n\r\n      await parseSSEResponse(resp, (message) => {\r\n        try {\r\n          const payload = JSON.parse(message);\r\n          if (payload.completion) {\r\n            result += payload.completion;\r\n            params.onEvent({\r\n              type: 'UPDATE_ANSWER',\r\n              data: { text: result.trimStart() },\r\n            });\r\n          } else if (payload.error) {\r\n            throw new AIModelError(JSON.stringify(payload.error), ErrorCode.SERVICE_UNAVAILABLE);\r\n          }\r\n        } catch (error) {\r\n          if (error instanceof AIModelError) {\r\n            throw error;\r\n          }\r\n          console.error('Error parsing Claude SSE message:', error);\r\n        }\r\n      });\r\n\r\n      params.onEvent({ type: 'DONE' });\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      \r\n      if (error instanceof DOMException && error.name === 'AbortError') {\r\n        return; // Request was aborted, no need to throw\r\n      }\r\n      \r\n      throw new AIModelError(\r\n        error instanceof Error ? error.message : String(error),\r\n        ErrorCode.NETWORK_ERROR\r\n      );\r\n    }\r\n  }\r\n\r\n  async initNewThread(): Promise<void> {\r\n      // Temporary implementation\r\n      this.resetConversation();\r\n    }\r\n}","import { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\n\r\n// We'll need to add the Google Generative AI SDK to package.json\r\n// npm install @google/generative-ai\r\n\r\ninterface ConversationContext {\r\n  chatSession: any; // Will be ChatSession from the SDK\r\n}\r\n\r\nexport interface GeminiApiModelConfig {\r\n  apiKey: string;\r\n}\r\n\r\nexport class GeminiApiModel extends AbstractModel {\r\n  private conversationContext?: ConversationContext;\r\n  private sdk: any; // Will be GoogleGenerativeAI from the SDK\r\n\r\n  constructor(config: GeminiApiModelConfig) {\r\n    super();\r\n    // We'll initialize the SDK in doSendMessage to avoid importing it here\r\n    this.sdk = null;\r\n    this.initializeSDK(config.apiKey);\r\n  }\r\n\r\n  private async initializeSDK(apiKey: string) {\r\n    try {\r\n      // Dynamically import the SDK to avoid bundling issues\r\n      const { GoogleGenerativeAI } = await import('@google/generative-ai');\r\n      this.sdk = new GoogleGenerativeAI(apiKey);\r\n    } catch (error) {\r\n      console.error('Failed to initialize Gemini SDK:', error);\r\n    }\r\n  }\r\n\r\n  getName(): string {\r\n    return 'Gemini Pro';\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return false; // Gemini Pro doesn't support image input in this implementation\r\n  }\r\n\r\n  resetConversation(): void {\r\n    this.conversationContext = undefined;\r\n  }\r\n\r\n  async initNewThread(): Promise<void> {\r\n    // Temporary implementation\r\n    this.resetConversation();\r\n  }\r\n\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    try {\r\n      if (!this.sdk) {\r\n        throw new AIModelError('Gemini API not initialized', ErrorCode.SERVICE_UNAVAILABLE);\r\n      }\r\n\r\n      if (!this.conversationContext) {\r\n        const model = this.sdk.getGenerativeModel({ model: 'gemini-pro' });\r\n        const chatSession = model.startChat();\r\n        this.conversationContext = { chatSession };\r\n      }\r\n\r\n      const result = await this.conversationContext.chatSession.sendMessageStream(params.prompt);\r\n\r\n      let text = '';\r\n      for await (const chunk of result.stream) {\r\n        const chunkText = chunk.text();\r\n        text += chunkText;\r\n        params.onEvent({ type: 'UPDATE_ANSWER', data: { text } });\r\n      }\r\n\r\n      if (!text) {\r\n        params.onEvent({ type: 'UPDATE_ANSWER', data: { text: 'Empty response' } });\r\n      }\r\n      \r\n      params.onEvent({ type: 'DONE' });\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      \r\n      if (error instanceof DOMException && error.name === 'AbortError') {\r\n        return; // Request was aborted, no need to throw\r\n      }\r\n      \r\n      throw new AIModelError(\r\n        error instanceof Error ? error.message : String(error),\r\n        ErrorCode.NETWORK_ERROR\r\n      );\r\n    }\r\n  }\r\n}","import { AbstractModel } from './abstract-model';\r\nimport { AIModelError, ErrorCode } from './types';\r\nimport { parseSSEResponse } from '../utils/sse';\r\n\r\ninterface ChatMessage {\r\n  role: 'system' | 'assistant' | 'user';\r\n  content: string;\r\n}\r\n\r\ninterface ConversationContext {\r\n  messages: ChatMessage[];\r\n}\r\n\r\nconst CONTEXT_SIZE = 9;\r\n\r\nexport interface OpenRouterModelConfig {\r\n  apiKey: string;\r\n  model: string;\r\n}\r\n\r\nexport class OpenRouterModel extends AbstractModel {\r\n  private conversationContext?: ConversationContext;\r\n  private readonly apiKey: string;\r\n  private readonly model: string;\r\n\r\n  constructor(config: OpenRouterModelConfig) {\r\n    super();\r\n    this.apiKey = config.apiKey;\r\n    this.model = config.model;\r\n  }\r\n\r\n  getName(): string {\r\n    return `OpenRouter/${this.model}`;\r\n  }\r\n\r\n  supportsImageInput(): boolean {\r\n    return false;\r\n  }\r\n\r\n  resetConversation(): void {\r\n    this.conversationContext = undefined;\r\n  }\r\n\r\n  private buildMessages(prompt: string): ChatMessage[] {\r\n    return [\r\n      ...this.conversationContext!.messages.slice(-(CONTEXT_SIZE + 1)), \r\n      { role: 'user', content: prompt }\r\n    ];\r\n  }\r\n\r\n  protected async doSendMessage(params: {\r\n    prompt: string;\r\n    image?: File;\r\n    signal?: AbortSignal;\r\n    onEvent: (event: { type: string; data?: any }) => void;\r\n  }): Promise<void> {\r\n    try {\r\n      if (!this.apiKey) {\r\n        throw new AIModelError('OpenRouter API key is required', ErrorCode.MISSING_API_KEY);\r\n      }\r\n\r\n      if (!this.conversationContext) {\r\n        this.conversationContext = { messages: [] };\r\n      }\r\n\r\n      const messages = this.buildMessages(params.prompt);\r\n\r\n      const resp = await fetch('https://openrouter.ai/api/v1/chat/completions', {\r\n        method: 'POST',\r\n        signal: params.signal,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.apiKey}`,\r\n          'HTTP-Referer': 'URL', //TODO\r\n          'X-Title': 'TITLE', //TODO\r\n        },\r\n        body: JSON.stringify({\r\n          model: this.model,\r\n          messages,\r\n          stream: true,\r\n        }),\r\n      });\r\n\r\n      if (!resp.ok) {\r\n        const error = await resp.json().catch(() => ({}));\r\n        throw new AIModelError(\r\n          error.error?.message || `HTTP error ${resp.status}`,\r\n          resp.status === 401 ? ErrorCode.UNAUTHORIZED : ErrorCode.SERVICE_UNAVAILABLE\r\n        );\r\n      }\r\n\r\n      // Add user message to context only after fetch success\r\n      this.conversationContext.messages.push({\r\n        role: 'user',\r\n        content: params.prompt,\r\n      });\r\n\r\n      let done = false;\r\n      const result: ChatMessage = { role: 'assistant', content: '' };\r\n\r\n      const finish = () => {\r\n        done = true;\r\n        params.onEvent({ type: 'DONE' });\r\n        const messages = this.conversationContext!.messages;\r\n        messages.push(result);\r\n      };\r\n\r\n      await parseSSEResponse(resp, (message) => {\r\n        if (message === '[DONE]') {\r\n          finish();\r\n          return;\r\n        }\r\n        \r\n        let data;\r\n        try {\r\n          data = JSON.parse(message);\r\n        } catch (err) {\r\n          console.error(err);\r\n          return;\r\n        }\r\n        \r\n        if (data?.choices?.length) {\r\n          const delta = data.choices[0].delta;\r\n          if (delta?.content) {\r\n            result.content += delta.content;\r\n            params.onEvent({\r\n              type: 'UPDATE_ANSWER',\r\n              data: { text: result.content },\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (!done) {\r\n        finish();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AIModelError) {\r\n        throw error;\r\n      }\r\n      \r\n      if (error instanceof DOMException && error.name === 'AbortError') {\r\n        return; // Request was aborted, no need to throw\r\n      }\r\n      \r\n      throw new AIModelError(\r\n        error instanceof Error ? error.message : String(error),\r\n        ErrorCode.NETWORK_ERROR\r\n      );\r\n    }\r\n  }\r\n\r\n  async initNewThread(): Promise<void> {\r\n    // Temporary implementation\r\n    this.resetConversation();\r\n  }\r\n}"],"names":["ErrorCode","AIModelError","Error","constructor","message","code","UNKNOWN_ERROR","super","this","name","globalThis","self","module","chrome","runtime","id","browser","Object","getPrototypeOf","prototype","CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE","wrapAPIs","extensionAPIs","apiMetadata","alarms","clear","minArgs","maxArgs","clearAll","get","getAll","bookmarks","create","getChildren","getRecent","getSubTree","getTree","move","remove","removeTree","search","update","browserAction","disable","fallbackToNoCallback","enable","getBadgeBackgroundColor","getBadgeText","getPopup","getTitle","openPopup","setBadgeBackgroundColor","setBadgeText","setIcon","setPopup","setTitle","browsingData","removeCache","removeCookies","removeDownloads","removeFormData","removeHistory","removeLocalStorage","removePasswords","removePluginData","settings","commands","contextMenus","removeAll","cookies","getAllCookieStores","set","devtools","inspectedWindow","eval","singleCallbackArg","panels","elements","createSidebarPane","downloads","cancel","download","erase","getFileIcon","open","pause","removeFile","resume","show","extension","isAllowedFileSchemeAccess","isAllowedIncognitoAccess","history","addUrl","deleteAll","deleteRange","deleteUrl","getVisits","i18n","detectLanguage","getAcceptLanguages","identity","launchWebAuthFlow","idle","queryState","management","getSelf","setEnabled","uninstallSelf","notifications","getPermissionLevel","pageAction","hide","permissions","contains","request","getBackgroundPage","getPlatformInfo","openOptionsPage","requestUpdateCheck","sendMessage","sendNativeMessage","setUninstallURL","sessions","getDevices","getRecentlyClosed","restore","storage","local","getBytesInUse","managed","sync","tabs","captureVisibleTab","discard","duplicate","executeScript","getCurrent","getZoom","getZoomSettings","goBack","goForward","highlight","insertCSS","query","reload","removeCSS","setZoom","setZoomSettings","topSites","webNavigation","getAllFrames","getFrame","webRequest","handlerBehaviorChanged","windows","getLastFocused","keys","length","DefaultWeakMap","WeakMap","createItem","items","undefined","key","has","isThenable","value","then","makeCallback","promise","metadata","callbackArgs","lastError","reject","resolve","pluralizeArguments","numArgs","wrapAsyncFunction","target","args","Promise","cbError","console","warn","noCallback","wrapMethod","method","wrapper","Proxy","apply","targetMethod","thisObj","call","hasOwnProperty","Function","bind","wrapObject","wrappers","cache","handlers","proxyTarget","prop","receiver","defineProperty","configurable","enumerable","desc","Reflect","deleteProperty","wrapEvent","wrapperMap","addListener","listener","hasListener","removeListener","onRequestFinishedWrappers","req","wrappedReq","getContent","onMessageWrappers","sender","sendResponse","wrappedSendResponse","result","didCallSendResponse","sendResponsePromise","response","err","isResultThenable","sendPromisedResult","msg","error","__mozWebExtensionPolyfillReject__","catch","wrappedSendMessageCallback","reply","wrappedSendMessage","apiNamespaceObj","wrappedCb","push","staticWrappers","network","onRequestFinished","onMessage","onMessageExternal","settingMetadata","privacy","services","websites","exports","factory","getRandomValues","rnds8","Uint8Array","rng","crypto","byteToHex","i","toString","slice","native","randomUUID","v4","options","buf","offset","rnds","random","arr","unsafeStringify","AbstractModel","prompt","fullResponse","doSendMessage","image","signal","onEvent","event","type","data","text","onProgress","String","loadThreadsFromStorage","Browser","THREADS_STORAGE_KEY","saveThreadsToStorage","threads","getCurrentThread","currentThread","loadThread","threadId","thread","find","t","saveThread","title","existingIndex","findIndex","getAllThreads","deleteThread","filter","initNewThread","createMessage","role","content","uuid","timestamp","Date","now","async","streamAsyncIterable","stream","reader","getReader","done","read","releaseLock","parseSSEResponse","body","decoder","TextDecoder","buffer","decode","lines","split","pop","line","trimmedLine","trim","startsWith","file2base64","file","withPrefix","FileReader","readAsDataURL","onload","onerror","suspectProtoRx","suspectConstructorRx","JsonSigRx","jsonParseTransform","warnKeyDropped","destr","_value","endsWith","includes","_lval","toLowerCase","Number","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","test","strict","SyntaxError","JSON","parse","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","PLUS_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_PIPE_RE","ENC_SPACE_RE","encodeQueryValue","input","stringify","encodeURI","replace","encodeQueryKey","decodeURIComponent","decodeQueryValue","parseQuery","parametersString","object","parameter","s","match","Array","isArray","stringifyQuery","k","map","encodeQueryItem","join","Boolean","PROTOCOL_STRICT_REGEX","PROTOCOL_REGEX","PROTOCOL_RELATIVE_REGEX","JOIN_LEADING_SLASH_RE","hasProtocol","inputString","opts","acceptRelative","withTrailingSlash","respectQueryAndFragment","withBase","base","url","_base","hasTrailingSlash","withoutTrailingSlash","segment","url2","isNonEmptyURL","_segment","joinURL","withQuery","parsed","_specialProtoMatch","_proto","_pathname","protocol","pathname","href","auth","host","hash","parsePath","hostAndPath","path","Math","max","protocolRelative","parseURL","mergedQuery","proto","stringifyParsedURL","Symbol","for","splice","FetchError","cause","payloadMethods","Set","freeze","isPayloadMethod","toUpperCase","textTypes","JSON_RE","resolveFetchOptions","defaults","Headers","headers","iterator","mergeHeaders","params","callHooks","context","hooks","hook","retryStatusCodes","nullBodyResponses","_globalThis","window","global","ofetch","createFetch","globalOptions","fetch","AbortController","onError","isAbort","timeout","retry","retries","responseCode","status","retryDelay","setTimeout","$fetchRaw","ctx","errorMessage","requestStr","statusStr","statusText","fetchError","refKey","createFetchError","captureStackTrace","_request","_options","abortTimeout","onRequest","baseURL","toJSON","isJSONSerializable","pipeTo","pipe","duplex","controller","abort","onRequestError","clearTimeout","_bodyInit","responseType","parseResponse","_contentType","contentType","shift","detectResponseType","parseFunction","_data","onResponse","ignoreResponseError","onResponseError","$fetch","raw","defaultOptions","customGlobalOptions","extractFromHTML","variableName","html","RegExp","exec","HarmCategory","HarmBlockThreshold","HarmProbability","BlockReason","FinishReason","TaskType","GoogleGenerativeAIError","GoogleGenerativeAIResponseError","Task","RequestUrl","model","task","apiKey","makeRequest","ok","json","details","e","stack","addHelpers","candidates","hadBadFinishReason","formatBlockErrorMessage","_a","_b","_c","_d","parts","getText","promptFeedback","badFinishReasons","RECITATION","SAFETY","candidate","finishReason","firstCandidate","finishMessage","blockReason","blockReasonMessage","__await","v","__asyncGenerator","thisArg","_arguments","generator","asyncIterator","TypeError","g","q","verb","n","a","b","r","fulfill","settle","f","SuppressedError","responseLineRE","processStream","responseStream","inputStream","ReadableStream","start","currentText","pump","close","parsedResponse","enqueue","substring","getResponseStream","pipeThrough","TextDecoderStream","fatal","stream1","stream2","tee","generateResponseSequence","getResponsePromise","allResponses","aggregateResponses","arguments","responses","lastResponse","aggregatedResponse","index","citationMetadata","safetyRatings","part","generateContentStream","STREAM_GENERATE_CONTENT","generateContent","GENERATE_CONTENT","formatNewContent","newParts","partOrString","formatGenerateContentInput","contents","SILENT_ERROR","ChatSession","_history","_sendPromise","_apiKey","getHistory","newContent","generateContentRequest","safetySettings","generationConfig","finalResult","responseContent","assign","blockErrorMessage","sendMessageStream","streamPromise","_ignored","streamResult","GenerativeModel","modelParams","formattedParams","startChat","startChatParams","countTokens","COUNT_TOKENS","embedContent","formatEmbedContentInput","EMBED_CONTENT","batchEmbedContents","batchEmbedContentRequest","BATCH_EMBED_CONTENTS","requestsWithModel","requests","getGenerativeModel","getName","supportsImageInput","resetConversation","conversationContext","generateSessionId","generateMessageId","getUserInfo","UNAUTHORIZED","floor","conversationId","userInfo","historyMessages","userId","lastMessageId","createdAt","from","resp","assistant","assistant_info","request_id","app_info","user_info","parent_id","created_at","attachments","session_info","parameters","repetition_penalty","temperature","top_k","top_p","max_new_tokens","do_sample","regenerate","wse","SERVICE_UNAVAILABLE","answerMessageId","uint8Array","answer","DOMException","NETWORK_ERROR","initializeStorage","validateExistingThreads","hasChanges","modelName","isValidBardMetadata","contextIds","requestParams","fetchRequestParams","atValue","blValue","parseBardResponse","responseText","jsonPart","payload","ids","images","processedText","media","source","placeholder","uploadImage","size","uploadUrl","URLSearchParams","ensureThreadLoaded","bardThreads","mostRecentThread","sort","updatedAt","log","getCurrentThreadSafe","userMessage","messages","getBardMetadata","imageUrl","bl","_reqid","rt","at","txt","assistantMessage","messageId","INVALID_REQUEST","config","systemMessage","buildUserMessage","image_url","detail","buildMessages","currentDate","toISOString","MISSING_API_KEY","Authorization","finish","choices","delta","sessionKey","fetchOrganizationId","Cookie","createConversation","organizationId","generateChatTitle","organization_uuid","conversation_uuid","message_content","recent_titles","completion","trimStart","sdk","initializeSDK","GoogleGenerativeAI","chatSession","chunk"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,10,11,12,13,15]}